{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Documents\\\\GitHub\\\\PWD-Pharma-2-JCWM01\\\\front_end\\\\src\\\\components\\\\admin\\\\ChartPieBt.jsx\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport Axios from 'axios';\nimport { URL_API } from '../../helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#e04be3', '#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; // static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\n\n\nclass ChartPieBt extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataChart: []\n    };\n\n    this.getChartStats = () => {\n      Axios.get(`${URL_API}/admin/piechart-bt`).then(res => {\n        this.setState({\n          dataChart: res.data.results\n        });\n        console.log(res.data.results);\n      }).catch(err => {\n        alert(\"Cannot Get Pie Chart bottle Unit\");\n        console.log(err);\n      });\n    };\n\n    this.printData = () => {\n      return this.state.dataChart.map((item, index) => {\n        return {\n          name: item.product_name,\n          value: item.qty\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getChartStats();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 5,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: this.printData(),\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: false,\n          label: renderCustomizedLabel,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          children: this.state.dataChart.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ChartPieBt;","map":{"version":3,"sources":["C:/Users/Abdul/Documents/GitHub/PWD-Pharma-2-JCWM01/front_end/src/components/admin/ChartPieBt.jsx"],"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","Axios","URL_API","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","ChartPieBt","state","dataChart","getChartStats","get","then","res","setState","data","results","console","log","catch","err","alert","printData","map","item","name","product_name","value","qty","componentDidMount","render","entry","length"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#e04be3', '#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\n// static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\r\n\r\nclass ChartPieBt extends PureComponent {\r\n  state = {\r\n    dataChart: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/piechart-bt`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Pie Chart bottle Unit\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      return (\r\n        {\r\n          name : item.product_name,\r\n          value: item.qty\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={5}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={this.printData()}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {this.state.dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartPieBt;"]},"metadata":{},"sourceType":"module"}