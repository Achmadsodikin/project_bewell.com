{"ast":null,"code":"import Axios from \"axios\";\nimport { URL_API } from \"../../helper\";\nexport const GET_USERS_DETAIL = \"GET_USERS_DETAIL\";\nexport const getUserDetail = id => {\n  return dispatch => {\n    Axios.get(`${URL_API}/user/getProfile`).then(res => {\n      dispatch({\n        type: GET_USERS_DETAIL,\n        payload: {\n          data: res.data,\n          errorMessage: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: GET_USERS_DETAIL,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n}; // export const loginUser = ({ username, password }) => {\n//   return (dispatch) => {\n//     Axios.post(`${URL_API}/user/login`, {\n//       username,\n//       password\n//     })\n//     .then((res) => {\n//       if (res.data.length) {\n//         console.log(username, password)\n//         if (password === res.data[0].password) {\n//           delete res.data[0].password\n//           localStorage.setItem(\"userDataEmmerce\", JSON.stringify(res.data[0]))\n//           dispatch({\n//             type: \"USER_LOGIN\",\n//             payload: res.data[0]\n//           })\n//         } else {\n//           // Handle error wrong password\n//           dispatch({\n//             type: \"USER_ERROR\",\n//             payload: \"Wrong Password!\"\n//           })\n//         }\n//       } else {\n//         // Handle error username not found\n//         dispatch({\n//           type: \"USER_ERROR\",\n//           payload: \"Username or Password is Wrong\"\n//         })\n//       }\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//       alert(\"Terjadi kesalahan di server\")\n//     })\n//   }\n// }\n\nexport const onBtnLogin = ({\n  username,\n  password\n}) => {\n  return dispatch => {\n    console.log(username, password);\n\n    if (username == \"\" || password == \"\") {\n      alert(\"Fill in All the Form\");\n    }\n\n    Axios.post(`${URL_API}/user/login`, {\n      username,\n      password\n    }).then(res => {\n      if (res.data.dataLogin !== 1) {\n        if (res.data.dataLogin) {\n          alert(\"Login Succes\");\n          console.log(\"Login Success âœ”\");\n          console.log(res.data);\n          localStorage.setItem(\"userDataEmmerce\", JSON.stringify(res.data.dataLogin));\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: res.data.dataLogin\n          });\n        } else {\n          dispatch({\n            type: \"USER_ERROR\",\n            payload: \"Your Account is not Verified. Please Verify your Account!\"\n          });\n        }\n      } else {\n        dispatch({\n          type: \"USER_ERROR\",\n          payload: \"Wrong Username or Password\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const submitBtnResetEmail = ({\n  email\n}) => {\n  return dispatch => {\n    if (email == \"\") {\n      return alert(\"Fill in All the Form\");\n    }\n\n    Axios.post(`${URL_API}/user/reset-email`, {\n      email\n    }).then(res => {\n      if (res.data.dataUser) {\n        console.log(\"Email Exists\");\n        console.log(res.data);\n        alert(\"Continue to reset password\");\n        dispatch({\n          type: \"RESET_EMAIL_PASS\",\n          payload: res.data.dataUser\n        });\n      } else {\n        dispatch({\n          type: \"RESET_EMAIL_ERROR\",\n          payload: \"Your Email doesn't Exist\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const logoutUser = () => {\n  localStorage.removeItem(\"userDataEmmerce\");\n  return {\n    type: \"USER_LOGOUT\"\n  };\n};\nexport const userKeepLogin = userData => {\n  return dispatch => {\n    Axios.post(`${URL_API}/user/keep-login`, {\n      id_user: userData.id_user\n    }).then(res => {\n      localStorage.setItem(\"userDataEmmerce\", JSON.stringify(res.data.dataLogin));\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: res.data.dataLogin\n      });\n    }).catch(err => {\n      alert(\"Error has occurred\");\n      console.log(err);\n    });\n  };\n};\nexport const checkStorage = () => {\n  return {\n    type: \"CHECK_STORAGE\"\n  };\n};","map":{"version":3,"sources":["C:/Users/Abdul/Documents/GitHub/PWD-Pharma-2-JCWM01/front_end/src/redux/actions/user.js"],"names":["Axios","URL_API","GET_USERS_DETAIL","getUserDetail","id","dispatch","get","then","res","type","payload","data","errorMessage","catch","error","message","onBtnLogin","username","password","console","log","alert","post","dataLogin","localStorage","setItem","JSON","stringify","err","submitBtnResetEmail","email","dataUser","logoutUser","removeItem","userKeepLogin","userData","id_user","checkStorage"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { URL_API } from \"../../helper\";\r\n\r\nexport const GET_USERS_DETAIL = \"GET_USERS_DETAIL\";\r\n\r\nexport const getUserDetail = (id) => {\r\n  return (dispatch) => {\r\n    Axios.get(`${URL_API}/user/getProfile`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_USERS_DETAIL,\r\n          payload: {\r\n            data: res.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: GET_USERS_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n// export const loginUser = ({ username, password }) => {\r\n//   return (dispatch) => {\r\n//     Axios.post(`${URL_API}/user/login`, {\r\n//       username,\r\n//       password\r\n//     })\r\n//     .then((res) => {\r\n//       if (res.data.length) {\r\n//         console.log(username, password)\r\n//         if (password === res.data[0].password) {\r\n//           delete res.data[0].password\r\n\r\n//           localStorage.setItem(\"userDataEmmerce\", JSON.stringify(res.data[0]))\r\n\r\n//           dispatch({\r\n//             type: \"USER_LOGIN\",\r\n//             payload: res.data[0]\r\n//           })\r\n//         } else {\r\n//           // Handle error wrong password\r\n//           dispatch({\r\n//             type: \"USER_ERROR\",\r\n//             payload: \"Wrong Password!\"\r\n//           })\r\n//         }\r\n//       } else {\r\n//         // Handle error username not found\r\n//         dispatch({\r\n//           type: \"USER_ERROR\",\r\n//           payload: \"Username or Password is Wrong\"\r\n//         })\r\n//       }\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err)\r\n//       alert(\"Terjadi kesalahan di server\")\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const onBtnLogin = ({ username, password }) => {\r\n  return (dispatch) => {\r\n    console.log(username, password);\r\n    if (username == \"\" || password == \"\") {\r\n      alert(\"Fill in All the Form\");\r\n    }\r\n\r\n    Axios.post(`${URL_API}/user/login`, {\r\n      username,\r\n      password,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.dataLogin !== 1) {\r\n          if (res.data.dataLogin) {\r\n            alert(\"Login Succes\");\r\n            console.log(\"Login Success âœ”\");\r\n            console.log(res.data);\r\n            localStorage.setItem(\r\n              \"userDataEmmerce\",\r\n              JSON.stringify(res.data.dataLogin)\r\n            );\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: res.data.dataLogin,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: \"USER_ERROR\",\r\n              payload:\r\n                \"Your Account is not Verified. Please Verify your Account!\",\r\n            });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: \"USER_ERROR\",\r\n            payload: \"Wrong Username or Password\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const submitBtnResetEmail = ({ email }) => {\r\n  return (dispatch) => {\r\n    if (email == \"\") {\r\n      return alert(\"Fill in All the Form\");\r\n    }\r\n\r\n    Axios.post(`${URL_API}/user/reset-email`, {\r\n      email,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.dataUser) {\r\n          console.log(\"Email Exists\");\r\n          console.log(res.data);\r\n          alert(\"Continue to reset password\");\r\n          dispatch({\r\n            type: \"RESET_EMAIL_PASS\",\r\n            payload: res.data.dataUser,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"RESET_EMAIL_ERROR\",\r\n            payload: \"Your Email doesn't Exist\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(\"userDataEmmerce\");\r\n\r\n  return {\r\n    type: \"USER_LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const userKeepLogin = (userData) => {\r\n  return (dispatch) => {\r\n    Axios.post(`${URL_API}/user/keep-login`, {\r\n      id_user: userData.id_user,\r\n    })\r\n      .then((res) => {\r\n        localStorage.setItem(\r\n          \"userDataEmmerce\",\r\n          JSON.stringify(res.data.dataLogin)\r\n        );\r\n\r\n        dispatch({\r\n          type: \"USER_LOGIN\",\r\n          payload: res.data.dataLogin,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error has occurred\");\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkStorage = () => {\r\n  return {\r\n    type: \"CHECK_STORAGE\",\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}