{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Documents\\\\GitHub\\\\PWD-Pharma-2-JCWM01\\\\front_end\\\\src\\\\components\\\\admin\\\\Chart.jsx\";\nimport React, { PureComponent } from 'react';\nimport Axios from 'axios';\nimport { URL_API } from '../../helper';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine, ResponsiveContainer } from 'recharts'; // static demoUrl = 'https://codesandbox.io/s/bar-chart-with-positive-negative-i3b8b';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chart extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataChart: [],\n      restockPriceMonthly: 0\n    };\n\n    this.getChartStats = () => {\n      Axios.get(`${URL_API}/admin/chart-stats`).then(res => {\n        this.setState({\n          dataChart: res.data.results\n        });\n        console.log(res.data.results);\n      }).catch(err => {\n        alert(\"Cannot Get Monthly Sales Statistic\");\n        console.log(err);\n      });\n    };\n\n    this.countRestockPriceMonthly = () => {\n      Axios.get(`${URL_API}/admin/restock-price-monthly`).then(res => {\n        this.setState({\n          restockPriceMonthly: parseInt(res.data.results[0].restock_price)\n        });\n        console.log(res.data);\n      }).catch(err => {\n        alert(\"Cannot Sum Restock Price Monthly\");\n        console.log(err);\n      });\n    };\n\n    this.printData = () => {\n      return this.state.dataChart.map((item, index) => {\n        if (item.month === \"October\") {\n          return {\n            name: \"October\",\n            ProfitOrLoss: item.total_price - this.state.restockPriceMonthly,\n            Revenue: item.tax + item.shipping_cost + item.total_price,\n            Expenses: -(item.tax + item.shipping_cost + this.state.restockPriceMonthly)\n          };\n        }\n\n        return {\n          name: item.month,\n          ProfitOrLoss: item.profit_or_loss,\n          Revenue: item.total_revenue,\n          Expenses: -item.total_expenses\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getChartStats();\n    this.countRestockPriceMonthly();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 3,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: this.printData(),\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          y: 0,\n          stroke: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Revenue\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Expenses\",\n          fill: \"#d96c5f\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"ProfitOrLoss\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Abdul/Documents/GitHub/PWD-Pharma-2-JCWM01/front_end/src/components/admin/Chart.jsx"],"names":["React","PureComponent","Axios","URL_API","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","ResponsiveContainer","Chart","state","dataChart","restockPriceMonthly","getChartStats","get","then","res","setState","data","results","console","log","catch","err","alert","countRestockPriceMonthly","parseInt","restock_price","printData","map","item","index","month","name","ProfitOrLoss","total_price","Revenue","tax","shipping_cost","Expenses","profit_or_loss","total_revenue","total_expenses","componentDidMount","render","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// static demoUrl = 'https://codesandbox.io/s/bar-chart-with-positive-negative-i3b8b';\r\n\r\nclass Chart extends PureComponent {\r\n  state = {\r\n    dataChart: [],\r\n    restockPriceMonthly: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n    this.countRestockPriceMonthly()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/chart-stats`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Monthly Sales Statistic\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  countRestockPriceMonthly = () => {\r\n    Axios.get(`${URL_API}/admin/restock-price-monthly`)\r\n      .then((res) => {\r\n        this.setState({\r\n          restockPriceMonthly: parseInt(res.data.results[0].restock_price),\r\n        });\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Sum Restock Price Monthly\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      if (item.month === \"October\") {\r\n        return (\r\n          {\r\n            name : \"October\",\r\n            ProfitOrLoss: item.total_price - this.state.restockPriceMonthly,\r\n            Revenue: item.tax + item.shipping_cost + item.total_price,\r\n            Expenses: - (item.tax + item.shipping_cost + this.state.restockPriceMonthly),\r\n          }\r\n        )\r\n      }\r\n\r\n      return (\r\n        {\r\n          name : item.month,\r\n          ProfitOrLoss: item.profit_or_loss,\r\n          Revenue: item.total_revenue,\r\n          Expenses: - item.total_expenses,\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={3}>\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={this.printData()}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"Revenue\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"Expenses\" fill=\"#d96c5f\" />\r\n          <Bar dataKey=\"ProfitOrLoss\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}