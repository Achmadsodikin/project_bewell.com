{"ast":null,"code":"import Axios from \"axios\";\nimport { URL_API } from \"../../helper\";\nexport const registerUser = ({\n  fullname,\n  username,\n  email,\n  password\n}) => {\n  return dispatch => {\n    Axios.post(`${API_URL}/users`, {\n      fullname,\n      username,\n      email,\n      password,\n      role: \"user\"\n    }) //proses asyncronus\n    .then(result => {\n      delete result.data.password;\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: result.data\n      });\n      alert(\"berhasil mendapatkan users\");\n    }).catch(() => {\n      alert(\"gagal mendapatkan users\");\n    });\n  };\n};\nexport const loginUser = ({\n  username,\n  password\n}) => {\n  return dispatch => {\n    Axios.get(`${URL_API}/user`, {\n      params: {\n        username\n      }\n    }).then(result => {\n      if (result.data.length) {\n        if (password === result.data[0].password) {\n          delete result.data[0].password;\n          localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]));\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: result.data[0]\n          });\n        } else {\n          // Handle error wrong password\n          dispatch({\n            type: \"USER_ERROR\",\n            payload: \"Wrong Password!\"\n          });\n        }\n      } else {\n        // Handle error username not found\n        dispatch({\n          type: \"USER_ERROR\",\n          payload: \"Username not found\"\n        });\n      }\n    }).catch(err => {\n      alert(\"Terjadi kesalahan di server\");\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Abdul/Documents/GitHub/PWD-Pharma-2-JCWM01/front_end/src/redux/actions/user.js"],"names":["Axios","URL_API","registerUser","fullname","username","email","password","dispatch","post","API_URL","role","then","result","data","type","payload","alert","catch","loginUser","get","params","length","localStorage","setItem","JSON","stringify","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AACvE,SAAQC,QAAD,IAAc;AACnBP,IAAAA,KAAK,CAACQ,IAAN,CAAY,GAAEC,OAAQ,QAAtB,EAA+B;AAC7BN,MAAAA,QAD6B;AAE7BC,MAAAA,QAF6B;AAG7BC,MAAAA,KAH6B;AAI7BC,MAAAA,QAJ6B;AAK7BI,MAAAA,IAAI,EAAE;AALuB,KAA/B,EAQE;AARF,KASGC,IATH,CASSC,MAAD,IAAY;AAChB,aAAOA,MAAM,CAACC,IAAP,CAAYP,QAAnB;AACAC,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEH,MAAM,CAACC;AAFT,OAAD,CAAR;AAIAG,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,KAhBH,EAiBGC,KAjBH,CAiBS,MAAM;AACXD,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,KAnBH;AAoBD,GArBD;AAsBD,CAvBM;AA0BP,OAAO,MAAME,SAAS,GAAG,CAAC;AAAEd,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,KAA4B;AACjD,SAAQC,QAAD,IAAc;AACnBP,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,OAArB,EAA6B;AAC3BmB,MAAAA,MAAM,EAAE;AACNhB,QAAAA;AADM;AADmB,KAA7B,EAKCO,IALD,CAKOC,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,IAAP,CAAYQ,MAAhB,EAAwB;AACtB,YAAIf,QAAQ,KAAKM,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeP,QAAhC,EAA0C;AACxC,iBAAOM,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeP,QAAtB;AAEAgB,UAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAf,CAAxC;AAEAN,UAAAA,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAE,YADC;AAEPC,YAAAA,OAAO,EAAEH,MAAM,CAACC,IAAP,CAAY,CAAZ;AAFF,WAAD,CAAR;AAID,SATD,MASO;AACL;AACAN,UAAAA,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAE,YADC;AAEPC,YAAAA,OAAO,EAAE;AAFF,WAAD,CAAR;AAID;AACF,OAjBD,MAiBO;AACL;AACAR,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,YADC;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;AACF,KA9BD,EA+BCE,KA/BD,CA+BQS,GAAD,IAAS;AACdV,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,KAjCD;AAkCD,GAnCD;AAoCD,CArCI","sourcesContent":["import Axios from \"axios\";\r\nimport { URL_API } from \"../../helper\";\r\n\r\nexport const registerUser = ({ fullname, username, email, password }) => {\r\n  return (dispatch) => {\r\n    Axios.post(`${API_URL}/users`, {\r\n      fullname,\r\n      username,\r\n      email,\r\n      password,\r\n      role: \"user\",\r\n    })\r\n\r\n      //proses asyncronus\r\n      .then((result) => {\r\n        delete result.data.password;\r\n        dispatch({\r\n          type: \"USER_LOGIN\",\r\n          payload: result.data,\r\n        });\r\n        alert(\"berhasil mendapatkan users\");\r\n      })\r\n      .catch(() => {\r\n        alert(\"gagal mendapatkan users\");\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const loginUser = ({ username, password }) => {\r\n    return (dispatch) => {\r\n      Axios.get(`${URL_API}/user`, {\r\n        params: {\r\n          username,\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result.data.length) {\r\n          if (password === result.data[0].password) {\r\n            delete result.data[0].password\r\n  \r\n            localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]))\r\n  \r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: result.data[0]\r\n            })\r\n          } else {\r\n            // Handle error wrong password\r\n            dispatch({\r\n              type: \"USER_ERROR\",\r\n              payload: \"Wrong Password!\"\r\n            })\r\n          }\r\n        } else {\r\n          // Handle error username not found\r\n          dispatch({\r\n            type: \"USER_ERROR\",\r\n            payload: \"Username not found\"\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Terjadi kesalahan di server\")\r\n      })\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}