[{"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\index.js":"1","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\reportWebVitals.js":"2","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\helper.js":"3","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\reducers\\index.js":"4","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\reducers\\user.js":"5","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\Register.jsx":"6","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Home.jsx":"7","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\Login.jsx":"8","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\actions\\user.js":"9","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\VerificationPage.jsx":"10","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\index.js":"11","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\reportWebVitals.js":"12","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\reducers\\index.js":"13","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\actions\\user.js":"14","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\Home.jsx":"15","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\Register.jsx":"16","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\VerificationPage.jsx":"17","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\Login.jsx":"18","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\reducers\\user.js":"19","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\helper.js":"20","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\App.jsx":"21","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ResetPassEmail.jsx":"22","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ResetPass.jsx":"23","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ChangePass.jsx":"24","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\History.jsx":"25","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\UploadPayment.jsx":"26","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Profile.jsx":"27","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Prescription.jsx":"28","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Cart.jsx":"29","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\Admin.jsx":"30","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\SalesReport.jsx":"31","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\Navbar.jsx":"32","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Transaction.jsx":"33","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\Footer.jsx":"34","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ProductDetail.jsx":"35","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\ProductUsage.jsx":"36","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\adminTransaction.jsx":"37","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\Stock.jsx":"38","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\CustomTransaction.jsx":"39","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\ConfirmReject.jsx":"40","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\ProductCard.jsx":"41","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPreStock.jsx":"42","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieMg.jsx":"43","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieBt.jsx":"44","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieMl.jsx":"45","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\TopSellAnnual.jsx":"46","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\TopSell.jsx":"47","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ProfitAnnual.jsx":"48","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\Chart.jsx":"49","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ExpensesCard.jsx":"50","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ProfitCard.jsx":"51","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ExpensesAnnual.jsx":"52","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\RevenueAnnual.jsx":"53","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\RevenueCard.jsx":"54"},{"size":767,"mtime":1635046003115,"results":"55","hashOfConfig":"56"},{"size":375,"mtime":1633075381141,"results":"57","hashOfConfig":"56"},{"size":46,"mtime":1633329564048,"results":"58","hashOfConfig":"56"},{"size":137,"mtime":1635181154450,"results":"59","hashOfConfig":"56"},{"size":1233,"mtime":1635181154466,"results":"60","hashOfConfig":"56"},{"size":3587,"mtime":1635181154404,"results":"61","hashOfConfig":"56"},{"size":2395,"mtime":1635222142671,"results":"62","hashOfConfig":"56"},{"size":2619,"mtime":1635181154388,"results":"63","hashOfConfig":"56"},{"size":4529,"mtime":1635181154434,"results":"64","hashOfConfig":"56"},{"size":844,"mtime":1635181154417,"results":"65","hashOfConfig":"56"},{"size":767,"mtime":1633572080793,"results":"66","hashOfConfig":"67"},{"size":375,"mtime":1633075381141,"results":"68","hashOfConfig":"67"},{"size":137,"mtime":1633935371522,"results":"69","hashOfConfig":"67"},{"size":4529,"mtime":1633935371509,"results":"70","hashOfConfig":"67"},{"size":279,"mtime":1633581327674,"results":"71","hashOfConfig":"67"},{"size":3587,"mtime":1633935371498,"results":"72","hashOfConfig":"67"},{"size":844,"mtime":1633531322942,"results":"73","hashOfConfig":"67"},{"size":2619,"mtime":1633935371487,"results":"74","hashOfConfig":"67"},{"size":1233,"mtime":1634122463616,"results":"75","hashOfConfig":"67"},{"size":46,"mtime":1633329564048,"results":"76","hashOfConfig":"67"},{"size":3663,"mtime":1635222142256,"results":"77","hashOfConfig":"56"},{"size":2162,"mtime":1635046003230,"results":"78","hashOfConfig":"56"},{"size":3111,"mtime":1637052501821,"results":"79","hashOfConfig":"56"},{"size":3256,"mtime":1635222142656,"results":"80","hashOfConfig":"56"},{"size":587,"mtime":1635181154304,"results":"81","hashOfConfig":"56"},{"size":606,"mtime":1635181154363,"results":"82","hashOfConfig":"56"},{"size":16422,"mtime":1635222142721,"results":"83","hashOfConfig":"56"},{"size":4236,"mtime":1635222142693,"results":"84","hashOfConfig":"56"},{"size":11875,"mtime":1635222142641,"results":"85","hashOfConfig":"56"},{"size":6178,"mtime":1635222142751,"results":"86","hashOfConfig":"56"},{"size":3625,"mtime":1635222142814,"results":"87","hashOfConfig":"56"},{"size":7413,"mtime":1635222142306,"results":"88","hashOfConfig":"56"},{"size":11703,"mtime":1635222142737,"results":"89","hashOfConfig":"56"},{"size":3131,"mtime":1635222142294,"results":"90","hashOfConfig":"56"},{"size":3830,"mtime":1635222142706,"results":"91","hashOfConfig":"56"},{"size":4621,"mtime":1635222142800,"results":"92","hashOfConfig":"56"},{"size":10236,"mtime":1635222142853,"results":"93","hashOfConfig":"56"},{"size":4186,"mtime":1635222142830,"results":"94","hashOfConfig":"56"},{"size":11771,"mtime":1637052754822,"results":"95","hashOfConfig":"56"},{"size":5158,"mtime":1635222142771,"results":"96","hashOfConfig":"56"},{"size":1196,"mtime":1635222142320,"results":"97","hashOfConfig":"56"},{"size":2602,"mtime":1635222142395,"results":"98","hashOfConfig":"56"},{"size":2189,"mtime":1635222142365,"results":"99","hashOfConfig":"56"},{"size":2246,"mtime":1635222142350,"results":"100","hashOfConfig":"56"},{"size":2189,"mtime":1635222142379,"results":"101","hashOfConfig":"56"},{"size":1771,"mtime":1635222142520,"results":"102","hashOfConfig":"56"},{"size":1913,"mtime":1635222142503,"results":"103","hashOfConfig":"56"},{"size":2619,"mtime":1635222142443,"results":"104","hashOfConfig":"56"},{"size":2746,"mtime":1635222142336,"results":"105","hashOfConfig":"56"},{"size":2232,"mtime":1635222142427,"results":"106","hashOfConfig":"56"},{"size":2843,"mtime":1635222142456,"results":"107","hashOfConfig":"56"},{"size":1773,"mtime":1635222142408,"results":"108","hashOfConfig":"56"},{"size":1468,"mtime":1635222142470,"results":"109","hashOfConfig":"56"},{"size":1585,"mtime":1635222142487,"results":"110","hashOfConfig":"56"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"e7gcua",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kk10jd",{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"113"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"113"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"113"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"113"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"113"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"113"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"113"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"113"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"113"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"113"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"113"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"113"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"113"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"113"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"113"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"113"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"113"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"113"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"113"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\index.js",[],["245","246"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\reportWebVitals.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\helper.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\reducers\\user.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\Register.jsx",["247","248","249","250","251"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { URL_API } from '../../helper';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n// import { registerUser } from '../../redux/actions/user'\r\nimport backgroundpharma from '../../img/pharma2.jpg'\r\n\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    username : \"\",\r\n    email : \"\",\r\n    password : \"\",\r\n    confPassword : \"\",\r\n    tryVerified : false\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onBtnRegister = () => {\r\n    const {username, email, password, confPassword } = this.state;\r\n\r\n    if (username == \"\" || email == \"\" || password == \"\" || confPassword == \"\") {\r\n      alert('fill in all the form')\r\n    } else if (password !== confPassword){\r\n      alert('password is not match')\r\n    } else {\r\n      Axios.post(`${URL_API}/user/register`, {\r\n        username,\r\n        email,\r\n        password,\r\n        confPassword\r\n      })\r\n      //proses asyncronus\r\n      .then(() => {\r\n        alert(\"Register Success !!! check your EMAIL to verified\");\r\n        this.setState({tryVerified : true})\r\n      })\r\n      .catch(() => {\r\n        alert(\"gagal mendapatkan users\");\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center mt-4\" >\r\n            <h1>Register page</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-4 offset-4\">\r\n            <div className=\"card\" style={{backgroundColor:\"#6495ED\"}}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\" style={{ color: \"white\" }}>Register</h5>\r\n                  <input\r\n                  name=\"username\"\r\n                  onChange={this.inputHandler}\r\n                  placeholder=\"Username\"\r\n                  type=\"text\"\r\n                  className=\"form-control my-2\"\r\n                  />\r\n                  <input\r\n                  name=\"email\"\r\n                  onChange={this.inputHandler}\r\n                  placeholder=\"Email\"\r\n                  type=\"text\"\r\n                  className=\"form-control my-2\"\r\n                  />\r\n                  <input\r\n                  name=\"password\"\r\n                  onChange={this.inputHandler}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  className=\"form-control my-2\"\r\n                  />\r\n                    <input\r\n                  name=\"confPassword\"\r\n                  onChange={this.inputHandler}\r\n                  placeholder=\"Confirm password\"\r\n                  type=\"password\"\r\n                  className=\"form-control my-2\"\r\n                  />\r\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                  <button onClick={this.onBtnRegister} className=\"btn btn-light mt-2\" disabled={this.tryVerified}>\r\n                    {this.tryVerified ? \"Check Your Email\" : <strong>Register</strong>}\r\n                  </button>\r\n                  <Link to=\"/login\" style={{ color: \"white\" }}>Or login</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n  // registerUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Home.jsx",["252"],"import React from \"react\";\r\nimport \"../assets/styles/product_card.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { URL_API } from \"../helper\";\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    dbproduct: [],\r\n    page: 1,\r\n    maxPage: 1,\r\n    limitPage: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.getData()\r\n  }\r\n\r\n  getData = () => {\r\n    Axios.get(`${URL_API}/admin/admin-stock/${this.state.limitPage}`)\r\n    .then(res => {\r\n      this.setState({ dbproduct: res.data.results, maxPage: Math.ceil(this.state.dbproduct.length / 4) })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Product Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  renderProducts = () => {\r\n    return this.state.dbproduct.map((val) => {\r\n      return <ProductCard productData={val} />\r\n    })\r\n  }\r\n\r\n  nextPageHandler = () =>{\r\n    this.setState({ page : this.state.page + 1, limitPage : this.state.limitPage + 4 })\r\n  }\r\n\r\n  prevPageHandler = () =>{\r\n    this.setState({ page : this.state.page - 1, limitPage : this.state.limitPage - 4 })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\", flexDirection: \"column\" }}>\r\n          <h1>Shop Now!</h1>\r\n          <Link to=\"/prescription\" style={{ fontSize: \"30px\" }} >or upload your prescription here</Link>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n          {this.renderProducts()}\r\n        </div>\r\n        <div className=\"d-flex flex-row justify-content-center align-items-center my-2\">\r\n          <button\r\n            disabled={this.state.page === 1}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.prevPageHandler}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <div className=\"text-center mx-3 my-3\">\r\n            <strong>Page {this.state.page}</strong>\r\n          </div>\r\n          <button\r\n            disabled={this.state.dbproduct.length < 4}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.nextPageHandler}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\Login.jsx",["253","254"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { onBtnLogin } from \"../../redux/actions/user\";\r\nimport \"../../assets/styles/background.css\";\r\nimport Axios from 'axios';\r\n\r\nimport { URL_API } from '../../helper';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  render() {\r\n    if(this.props.userGlobal.id_user) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center mt-4\">\r\n            <h1>Log in now!</h1>\r\n            <p className=\"lead\">\r\n              Log in now and start shopping in the most affordable <strong>pharmaceutical</strong> ecommerce\r\n            </p>\r\n            {\r\n              this.props.userGlobal.errMsg ?\r\n              <div className=\"alert alert-danger\">{this.props.userGlobal.errMsg}</div>\r\n              : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-4 offset-4\">\r\n            <div className=\"card\" style={{ backgroundColor: \"#6495ED\" }}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\" style={{ color: \"white\" }}>Log in</h5>\r\n                <input onChange={this.inputHandler} name=\"username\" placeholder=\"Username\" type=\"text\" className=\"form-control my-2\" />\r\n                <input onChange={this.inputHandler} name=\"password\" placeholder=\"Password\" type=\"password\" className=\"form-control my-2\" />\r\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                  <button onClick={() => this.props.onBtnLogin(this.state)} className=\"btn btn-light mt-2\">\r\n                    <strong>Login</strong>\r\n                  </button>\r\n                  <Link to=\"/register\" style={{ color: \"white\" }}>Or register</Link>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <Link to=\"/reset-pass-email\" style={{ color: \"white\" }}>Forgot Password?</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onBtnLogin\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\redux\\actions\\user.js",["255","256","257"],"import Axios from \"axios\";\r\nimport { URL_API } from \"../../helper\";\r\n\r\nexport const GET_USERS_DETAIL = \"GET_USERS_DETAIL\";\r\n\r\nexport const getUserDetail = (id) => {\r\n  return (dispatch) => {\r\n    Axios.get(`${URL_API}/user/getProfile`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_USERS_DETAIL,\r\n          payload: {\r\n            data: res.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: GET_USERS_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n// export const loginUser = ({ username, password }) => {\r\n//   return (dispatch) => {\r\n//     Axios.post(`${URL_API}/user/login`, {\r\n//       username,\r\n//       password\r\n//     })\r\n//     .then((res) => {\r\n//       if (res.data.length) {\r\n//         console.log(username, password)\r\n//         if (password === res.data[0].password) {\r\n//           delete res.data[0].password\r\n\r\n//           localStorage.setItem(\"userDataEmmerce\", JSON.stringify(res.data[0]))\r\n\r\n//           dispatch({\r\n//             type: \"USER_LOGIN\",\r\n//             payload: res.data[0]\r\n//           })\r\n//         } else {\r\n//           // Handle error wrong password\r\n//           dispatch({\r\n//             type: \"USER_ERROR\",\r\n//             payload: \"Wrong Password!\"\r\n//           })\r\n//         }\r\n//       } else {\r\n//         // Handle error username not found\r\n//         dispatch({\r\n//           type: \"USER_ERROR\",\r\n//           payload: \"Username or Password is Wrong\"\r\n//         })\r\n//       }\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err)\r\n//       alert(\"Terjadi kesalahan di server\")\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const onBtnLogin = ({ username, password }) => {\r\n  return (dispatch) => {\r\n    console.log(username, password);\r\n    if (username == \"\" || password == \"\") {\r\n      alert(\"Fill in All the Form\");\r\n    }\r\n\r\n    Axios.post(`${URL_API}/user/login`, {\r\n      username,\r\n      password,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.dataLogin !== 1) {\r\n          if (res.data.dataLogin) {\r\n            alert(\"Login Succes\");\r\n            console.log(\"Login Success ✔\");\r\n            console.log(res.data);\r\n            localStorage.setItem(\r\n              \"userDataEmmerce\",\r\n              JSON.stringify(res.data.dataLogin)\r\n            );\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: res.data.dataLogin,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: \"USER_ERROR\",\r\n              payload:\r\n                \"Your Account is not Verified. Please Verify your Account!\",\r\n            });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: \"USER_ERROR\",\r\n            payload: \"Wrong Username or Password\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const submitBtnResetEmail = ({ email }) => {\r\n  return (dispatch) => {\r\n    if (email == \"\") {\r\n      return alert(\"Fill in All the Form\");\r\n    }\r\n\r\n    Axios.post(`${URL_API}/user/reset-email`, {\r\n      email,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.dataUser) {\r\n          console.log(\"Email Exists\");\r\n          console.log(res.data);\r\n          alert(\"Continue to reset password\");\r\n          dispatch({\r\n            type: \"RESET_EMAIL_PASS\",\r\n            payload: res.data.dataUser,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"RESET_EMAIL_ERROR\",\r\n            payload: \"Your Email doesn't Exist\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(\"userDataEmmerce\");\r\n\r\n  return {\r\n    type: \"USER_LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const userKeepLogin = (userData) => {\r\n  return (dispatch) => {\r\n    Axios.post(`${URL_API}/user/keep-login`, {\r\n      id_user: userData.id_user,\r\n    })\r\n      .then((res) => {\r\n        localStorage.setItem(\r\n          \"userDataEmmerce\",\r\n          JSON.stringify(res.data.dataLogin)\r\n        );\r\n\r\n        dispatch({\r\n          type: \"USER_LOGIN\",\r\n          payload: res.data.dataLogin,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error has occurred\");\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkStorage = () => {\r\n  return {\r\n    type: \"CHECK_STORAGE\",\r\n  };\r\n};\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\auth\\VerificationPage.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\index.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\reportWebVitals.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\actions\\user.js",["258","259","260"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\Home.jsx",["261"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\Register.jsx",["262","263","264","265","266"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\VerificationPage.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\pages\\auth\\Login.jsx",["267","268"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\redux\\reducers\\user.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\FRONT_END\\src\\helper.js",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\App.jsx",["269"],"import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Register from \"./pages/auth/Register\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport ChangePass from \"./pages/ChangePass\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ResetPassEmail from \"./pages/ResetPassEmail\";\r\nimport ResetPass from \"./pages/ResetPass\";\r\nimport VerificationPage from \"./pages/auth/VerificationPage\";\r\nimport Admin from \"./pages/admin/Admin\";\r\nimport ProductUsage from \"./pages/admin/ProductUsage\";\r\nimport CustomTransaction from \"./pages/admin/CustomTransaction\";\r\nimport Cart from \"./pages/Cart\";\r\nimport History from \"./pages/History\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Prescription from './pages/Prescription'\r\nimport SalesReport from \"./pages/admin/SalesReport\";\r\nimport adminTransaction from \"./pages/admin/adminTransaction\";\r\nimport UploadPayment from \"./pages/UploadPayment\";\r\nimport Transaction from \"./pages/Transaction\"\r\nimport ConfirmReject from \"./pages/admin/ConfirmReject\";\r\nimport Stock from \"./pages/admin/Stock\";\r\nimport ProductDetail from \"./pages/ProductDetail\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { userKeepLogin, checkStorage } from './redux/actions/user';\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const userLocalStorage = localStorage.getItem(\"userDataEmmerce\")\r\n\r\n    if (userLocalStorage) {\r\n      const userData = JSON.parse(userLocalStorage)\r\n      this.props.userKeepLogin(userData)\r\n    } else {\r\n      this.props.checkStorage()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userGlobal.storageIsChecked) {\r\n      return (\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route component={Home} path=\"/\" exact/>\r\n            <Route component={Login} path=\"/login\" />\r\n            <Route component={Register} path=\"/register\" />\r\n            <Route component={ChangePass} path=\"/change-pass\" />\r\n            <Route component={ResetPassEmail} path=\"/reset-pass-email\" />\r\n            <Route component={ResetPass} path=\"/resetpass\" />\r\n            <Route component={VerificationPage} path=\"/authentication/:token\" />\r\n            <Route component={Admin} path=\"/admin\" />\r\n            <Route component={ProductUsage} path=\"/product-usage\" />\r\n            <Route component={CustomTransaction} path=\"/custom-transaction\" />\r\n            <Route component={Cart} path=\"/cart\" />\r\n            <Route component={History} path=\"/history\" />\r\n            <Route component={Profile} path=\"/profile\" />\r\n            <Route component={adminTransaction} path=\"/admin-transaction\" />\r\n            <Route component={Prescription} path=\"/prescription\"/>\r\n            <Route component={SalesReport} path=\"/sales\" />\r\n            <Route component={UploadPayment} path=\"/upload-payment\" />\r\n            <Route component={Transaction} path=\"/transaction\" />\r\n            <Route component={ConfirmReject} path=\"/confirm-reject\" />\r\n            <Route component={Stock} path=\"/stock\" />\r\n            <Route component={ProductDetail} path=\"/product-detail/:productId\" />\r\n          </Switch>\r\n          <Footer />\r\n        </BrowserRouter>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  userKeepLogin,\r\n  checkStorage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ResetPassEmail.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ResetPass.jsx",["270","271"],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ChangePass.jsx",["272","273","274","275"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../helper';\r\nimport { logoutUser } from '../redux/actions/user';\r\n\r\nclass ChangePass extends React.Component {\r\n  state = {\r\n    currentPass: \"\",\r\n    newPass: \"\",\r\n    confNewPass: \"\",\r\n    redirect: false\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  onBtnSubmit = ({currentPass, newPass, confNewPass}) => {\r\n    // const {currentPass, newPass, confNewPass} = this.state\r\n    // console.log(currentPass, newPass, confNewPass)\r\n\r\n    if (currentPass == \"\" || newPass == \"\" || confNewPass == \"\" ) {\r\n      alert(\"Fill in All the Form\")\r\n    } else if (newPass !== confNewPass) {\r\n      alert(\"New Password Confirmation is not Matched\")\r\n    } else {\r\n      Axios.patch(`${URL_API}/user/change/${this.props.userGlobal.id_user}`, {\r\n        newPass,\r\n        currentPass\r\n      })\r\n      .then(res => {\r\n        alert(\"Password Changed Successfully\")\r\n        console.log(\"Password Changed Successfully\")\r\n        this.setState({ redirect: true })\r\n      })\r\n      .catch(err => {\r\n        alert(\"Your Current Password is Wrong\")\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center\">\r\n            <h1>Change Password</h1>\r\n            <p className=\"lead\">\r\n              Change Password\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-4 offset-4\">\r\n            <div className=\"card\" style={{ backgroundColor: \"#6495ED\" }} >\r\n              <div className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\" style={{ color: \"white\" }}>Change Password</h5>\r\n                <input onChange={this.inputHandler} name=\"currentPass\" placeholder=\"Current password\" type=\"password\" className=\"form-control my-2\" />\r\n                <input onChange={this.inputHandler} name=\"newPass\" placeholder=\"New password\" type=\"password\" className=\"form-control my-2\" />\r\n                <input onChange={this.inputHandler} name=\"confNewPass\" placeholder=\"Confirm new password\" type=\"password\" className=\"form-control my-2\" />\r\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                  <button onClick={() => this.onBtnSubmit(this.state)} className=\"btn btn-light mt-2\">\r\n                    <strong>Submit</strong>\r\n                  </button>\r\n                  <Link to=\"/\" style={{ color: \"white\" }}>Cancel</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = {\r\n//   logoutUser,\r\n// }\r\n\r\nexport default connect(mapStateToProps)(ChangePass)","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\History.jsx",["276"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass History extends React.Component {\r\n  render() {\r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  \r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n        <h1>History Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(History);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\UploadPayment.jsx",["277"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass UploadPayment extends React.Component {\r\n  render() {\r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  \r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n        <h1>Upload Payment Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadPayment);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Profile.jsx",["278","279","280","281","282","283","284","285","286"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { URL_API } from \"../helper\";\r\nimport image_preview from \"../../src/img/image_preview.png\";\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    address: \"\",\r\n    phone_number: 0,\r\n    full_name: \"\",\r\n    gender: \"\",\r\n    age: 0,\r\n    profile_picture: \"\",\r\n    role: \"\",\r\n    status: \"\",\r\n    pharma2: [],\r\n    selectedID: null,\r\n  };\r\n  inputHandler = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //   inputHandlerImg = (event) => {\r\n\r\n  //     this.setState({ profile_picture: URL.createObjectURL(upload) });\r\n  //   };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    // Axios.get(`http://localhost:3300/user/getProfile/$this.props.globalState.id_user`)\r\n    // HARDCODE\r\n    Axios.get(`http://localhost:3300/user/getProfile/${this.props.userGlobal.id_user}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          pharma2: res.data,\r\n          address: res.data.address,\r\n          phone_number: res.data.phone_number,\r\n          full_name: res.data.full_name,\r\n          gender: res.data.gender,\r\n          age: res.data.age,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  onImgPreview = () => {\r\n    if (this.state.addFile) {\r\n      let formData = new FormData();\r\n\r\n      formData.append(\"file\", this.state.addFile);\r\n      // HARDCODE\r\n      Axios.patch(`${URL_API}/upload/uploadimg/${this.props.userGlobal.id_user}`, formData)\r\n        .then((res) => {\r\n          alert(res.data.message);\r\n          this.getData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  getProfileImage = () => {\r\n    Axios.get(`${URL_API}/upload/get`)\r\n      .then((res) => {\r\n        this.setState({ profile_picture: res.data.profile_picture });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  onBtnSaveAll = () => {\r\n    this.onBtnSave();\r\n    this.onImgPreview();\r\n    this.getData();\r\n    window.location.reload()\r\n  };\r\n\r\n  onBtnAddfile = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState({\r\n        profile_picture: e.target.files[0].name,\r\n        addFile: e.target.files[0],\r\n      });\r\n      let preview = document.getElementById(\"imgpreview\");\r\n      preview.src = URL.createObjectURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  onBtnSave = () => {\r\n    const { address, phone_number, full_name, gender, age, profile_picture } =\r\n      this.state;\r\n    console.log(address, phone_number, full_name, gender, age, profile_picture);\r\n    // HARDCODE\r\n    Axios.patch(`${URL_API}/user/edit/${this.props.userGlobal.id_user}`, {\r\n      address,\r\n      phone_number,\r\n      full_name,\r\n      gender,\r\n      age,\r\n      profile_picture,\r\n    })\r\n      .then(() => {\r\n        alert(\"Profile Change Successfully\");\r\n        this.getData();\r\n        this.setState({ selectedID: null });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  printData = () => {\r\n    return this.state.pharma2.map((item, index) => {\r\n      if (this.state.selectedID !== index) {\r\n        return (\r\n          <div className=\"container rounded mt-5 mb-5 row justify-content-center\">\r\n            <div\r\n              className=\"col-md-3 border-right\"\r\n              style={{ backgroundColor: \"#00008B\", borderRadius: \"10px\" }}\r\n            >\r\n              <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                <img\r\n                  id=\"imgpreview\"\r\n                  className=\"rounded-circle mt-5\"\r\n                  width=\"150px\"\r\n                  src={URL_API + item.profile_picture}\r\n                  style={{ height: \"150px\" }}\r\n                />\r\n\r\n                <span style={{ color: \"white\" }}> {item.full_name}</span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-md-5 border-right\"\r\n              style={{ backgroundColor: \"#00008B\", borderRadius: \"10px\" }}\r\n            >\r\n              <div className=\"p-3 py-5\">\r\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <h4 className=\"text-right\" style={{ color: \"white\" }}>\r\n                    Profile\r\n                  </h4>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Username\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      defaultValue={item.username}\r\n                      className=\"form-control\"\r\n                      placeholder=\"username\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      defaultValue={item.email}\r\n                      className=\"form-control\"\r\n                      placeholder=\"surname\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Address\r\n                    </label>\r\n                    <input\r\n                      type=\"text-area\"\r\n                      disabled=\"true\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"enter address\"\r\n                      defaultValue={item.address}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Phone Number\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"phone number\"\r\n                      defaultValue={item.phone_number}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Fullname\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"enter full name\"\r\n                      defaultValue={item.full_name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Gender\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"enter gender\"\r\n                      defaultValue={item.gender}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\" style={{ color: \"white\" }}>\r\n                      Age\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      disabled=\"true\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"enter age\"\r\n                      defaultValue={item.age}\r\n                    />\r\n                    <div className=\"mt-5 text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary profile-button\"\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            selectedID: index,\r\n                            profile_picture: item.profile_picture,\r\n                          })\r\n                        }\r\n                      >\r\n                        Edit Profile\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"container rounded bg-white mt-5 mb-5\">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-3 border-right\"\r\n                style={{ backgroundColor: \"#00008B\", borderRadius: \"10px\" }}\r\n              >\r\n                <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                  <img\r\n                    id=\"imgpreview\"\r\n                    className=\"rounded-circle mt-5\"\r\n                    width=\"150px\"\r\n                    src={URL_API + item.profile_picture}\r\n                    style={{ height: \"150px\" }}\r\n                  />\r\n\r\n                  <input\r\n                    onChange={this.onBtnAddfile}\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"formFile\"\r\n                    accept=\"image/*\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-5 border-right\"\r\n                style={{ backgroundColor: \"#00008B\", borderRadius: \"10px\" }}\r\n              >\r\n                <div className=\"p-3 py-5\">\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                    <h4 className=\"text-right\" style={{ color: \"white\" }}>\r\n                      Profile\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"row mt-2\">\r\n                    <div className=\"col-md-6\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        disabled=\"true\"\r\n                        innerRef={(newUsername) =>\r\n                          (this.newUsername = newUsername)\r\n                        }\r\n                        defaultValue={item.username}\r\n                        className=\"form-control\"\r\n                        placeholder=\"username\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        disabled=\"true\"\r\n                        name=\"email\"\r\n                        defaultValue={item.email}\r\n                        innerRef={(newEmail) => (this.newEmail = newEmail)}\r\n                        className=\"form-control\"\r\n                        placeholder=\"surname\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Address\r\n                      </label>\r\n                      <input\r\n                        type=\"text-area\"\r\n                        onChange={this.inputHandler}\r\n                        name=\"address\"\r\n                        value={this.state.address}\r\n                        className=\"form-control\"\r\n                        placeholder=\"enter address\"\r\n                        defaultValue={item.address}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Phone Number\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={this.inputHandler}\r\n                        name=\"phone_number\"\r\n                        value={this.state.phone_number}\r\n                        className=\"form-control\"\r\n                        placeholder=\"enter phone number\"\r\n                        defaultValue={item.phone_number}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Fullname\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={this.inputHandler}\r\n                        name=\"full_name\"\r\n                        value={this.state.full_name}\r\n                        className=\"form-control\"\r\n                        placeholder=\"enter full name\"\r\n                        defaultValue={item.full_name}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Gender\r\n                      </label>\r\n                      <FormGroup>\r\n                        <Input\r\n                          className={\"d-grid mx-4 form-control\"}\r\n                          style={{ width: \"100px\" }}\r\n                          onChange={this.inputHandler}\r\n                          value={this.state.gender}\r\n                          defaultValue={item.gender}\r\n                          type=\"select\"\r\n                          name=\"gender\"\r\n                          id=\"exampleSelect\"\r\n                        >\r\n                          <option value={\"-\"}>-</option>\r\n                          <option value={\"Pria\"}>Pria</option>\r\n                          <option value={\"Wanita\"}>Wanita</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <label className=\"labels\" style={{ color: \"white\" }}>\r\n                        Age\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={this.inputHandler}\r\n                        className=\"form-control\"\r\n                        placeholder=\"enter age\"\r\n                        defaultValue={item.age}\r\n                        name=\"age\"\r\n                      />\r\n                      <div className=\"mt-5 text-center\">\r\n                        <button\r\n                          className={\"btn gap-2 col-6 my-2 btn-warning \"}\r\n                          onClick={() => this.setState({ selectedID: null })}\r\n                        >\r\n                          Back\r\n                        </button>\r\n                        <button\r\n                          className={\r\n                            \"d-grid gap-2 col-6 my-2 btn btn btn-success\"\r\n                          }\r\n                          onClick={() => this.onBtnSaveAll(this.state)}\r\n                        >\r\n                          Save Change\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //    console.log( this.posisi)\r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"row m-auto justify-content-center\">\r\n        <div className=\"col-md-10\">\r\n          <Table>\r\n            <tbody>{this.printData()}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Prescription.jsx",["287","288","289","290","291","292","293","294"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Table } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { URL_API } from '../helper';\r\n\r\n\r\nclass Prescription extends React.Component {\r\n    state ={\r\n        commentar : \"\",\r\n        prescription_image : \"\",\r\n        doneUpload : false\r\n\r\n    }\r\n\r\n\r\n    previewFile = (e) =>{\r\n        if (e.target.files[0]){\r\n            this.setState({prescription_image : e.target.files[0].name, addFile : e.target.files[0]})\r\n            let preview = document.getElementById(\"prescriptionPreview\")\r\n            preview.src = URL.createObjectURL(e.target.files[0])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onImageUpload = ()=>{\r\n        if(this.state.addFile) {\r\n            let formData = new FormData()\r\n\r\n            let obj = {\r\n                commentar : this.inputCommentar.value\r\n        }\r\n        \r\n        formData.append('data', JSON.stringify(obj))\r\n        formData.append('file', this.state.addFile)\r\n        Axios.post(`${URL_API}/upload/uploadPrescription/${this.props.userGlobal.id_user}`,formData)\r\n        .then(res =>{\r\n            alert(res.data.message)\r\n            this.setState({doneUpload : true})\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div style={{ backgroundColor: '#F8F9FA' }}>\r\n                <div className=\"jumbotron mb-2 row\" style={{ backgroundColor: 'white' }}>\r\n                    <div className=\"col-md-6\">\r\n                        <div style={{ width: '90%' }} className=\"m-auto\">\r\n                            <h1 className=\"display-4\">Your Prescription</h1>\r\n                            {\r\n                                this.state.doneUpload ? \r\n                                <p className=\"lead\" style={{fontSize:\"30px\"}}>Success Upload your prescription, Check your transaction to check your prescription transaction</p> :\r\n\r\n                            <p className=\"lead\" style={{fontSize:\"30px\"}}>Upload this prescription and wait for our admin to prepare your order</p>\r\n                            }\r\n                           <div className=\"dflex justify-content-left align-items-left\"></div>\r\n                           <div>\r\n                               <img \r\n                               \r\n                               id = \"prescriptionPreview\"\r\n                               alt=\"\"\r\n                               className= \"img-thumbnail d-grid gap-2 col-9 mx-auto\" \r\n                               style={{width:\"700px\", height:\"500px\", backgroundColor:\"#00008B\"}}/>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                    <di className=\"col-md-3\">\r\n                    </di>\r\n                    <div className=\"col-md-3 p-4 text-white text-left\" style={{backgroundColor:\"#00008B\", borderRadius: \"30px\"}}>\r\n                        <form>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Commentar</label>\r\n                                <textarea type=\"textarea\" className=\"form-control\" id=\"commentar\" aria-describedby=\"emailHelp\" style={{height: \"300px\"}} ref={elemen => this.inputCommentar = elemen} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"img\">Image</label>\r\n                                <input type=\"file\" className=\"form-control\" id=\"img\" aria-describedby=\"emailHelp\" onChange= {this.previewFile} />\r\n                            </div>\r\n                        </form>\r\n                        <button type=\"button\" onClick={this.onImageUpload} className=\"btn btn-primary float-right\" >Add Data</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row container m-auto\">\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userGlobal: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Prescription);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Cart.jsx",["295","296","297"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { URL_API } from \"../helper\";\r\nimport Axios from 'axios'\r\nimport { NavItem, Button } from \"reactstrap\";\r\n\r\nclass Cart extends React.Component {\r\n  state = {\r\n    dbcart: [],\r\n    id_cart: 0,\r\n    editQtyChecked: false,\r\n    cart_qty: 0,\r\n    total: 0,\r\n    stock: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    grandTotalPrice: 0,\r\n    isCheckoutMode: false,\r\n    paymentMethod: \"\",\r\n    expedition: \"\",\r\n    insertQuery: \"\",\r\n    redirect: false\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  checkoutModeToggle = () => {\r\n    this.setState({ isCheckoutMode: !this.state.isCheckoutMode });\r\n  };\r\n\r\n  getData = () => {\r\n    Axios.get(`${URL_API}/cart/getCart/${this.props.userGlobal.id_user}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          dbcart: res.data.results,\r\n          cart_qty: res.data.cart_qty,\r\n          total: res.data.total,\r\n          stock: res.data.stock,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Data\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateQty = (cartId) => {\r\n    const { cart_qty } = this.state;\r\n    this.setState({ editQtyChecked: false });\r\n    Axios.patch(`${URL_API}/cart/updateQty/${cartId}`, {\r\n      cart_qty,\r\n    })\r\n      .then(() => {\r\n        this.getData();\r\n        alert(\"berhasil update Quantity\");\r\n        window.location.reload()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  deleteBtnHandler = (cartId) => {\r\n    Axios.delete(`${URL_API}/cart/deleteCart/${cartId}`)\r\n      .then(() => {\r\n        alert(\"berhasil delete cart\");\r\n        this.getData();\r\n        window.location.reload()\r\n      })\r\n      .catch(() => {\r\n        alert(\"terjadi kesalahan di server\");\r\n      });\r\n  };\r\n\r\n  subtotalPrice = () => {\r\n    Axios.post(`${URL_API}/cart/subtotal-price`, {\r\n      id_user: this.props.userGlobal.id_user\r\n    })\r\n    .then((res) => {\r\n      this.setState({ \r\n        subtotal: res.data.results[0].subtotal,\r\n        tax: res.data.results[0].subtotal * 0.1,\r\n        grandTotalPrice: res.data.results[0].subtotal + (res.data.results[0].subtotal * 0.1) + (this.state.dbcart.length * 10000)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      alert(\"Cannot Count Cart Subtotal Price\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.subtotalPrice()\r\n    this.mapInsertQuery()\r\n    this.mapDeleteQuery()\r\n  }\r\n\r\n  payBtnHandler = () => {\r\n    this.insertTransaction()\r\n    this.clearCart()\r\n    this.setState({ redirect: true })\r\n  }\r\n\r\n  insertTransaction = () => {\r\n    Axios.post(`${URL_API}/cart/pay`, {\r\n      insertQuery: this.mapInsertQuery().toString()\r\n    })\r\n    .then((res) => {\r\n      alert(\"Please Continue to Upload Your Proof of Payment\")\r\n      console.log(res)\r\n    })\r\n    .catch((err) => {\r\n      alert(\"Payment Error\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  clearCart = () => {\r\n    Axios.patch(`${URL_API}/cart/clear-cart`, {\r\n      deleteQuery: this.mapDeleteQuery()\r\n    })\r\n    .then((res) => {\r\n      alert(\"Cart will be Cleared After Checkout\")\r\n      console.log(res)\r\n    })\r\n    .catch((err) => {\r\n      alert(\"Clear Cart After Checkout Error\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  mapDeleteQuery = () => {\r\n    return this.state.dbcart.map((item, index) => {\r\n      return (\r\n        item.id_cart\r\n      )\r\n    })\r\n  }\r\n\r\n  mapInsertQuery = () => {\r\n    const d = new Date()\r\n\r\n    return this.state.dbcart.map((item, index) => {\r\n      return (\r\n        `(null, ${this.props.userGlobal.id_user}, ${item.cart_qty}, ${item.product_price * item.cart_qty * 0.1}, ${item.product_price * item.cart_qty}, '${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}', '${this.state.paymentMethod}', '${this.state.expedition}', 10000, null, 'unpaid', ${item.id_product}, null)`\r\n      )\r\n    })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dbcart.map((item, index) => {\r\n      return (\r\n        <tr>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">{item.product_name}</td>\r\n          <td className=\"align-middle\">Rp.{(item.product_price).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">\r\n            <img src={URL_API + item.product_image} alt=\"\" style={{ height: \"125px\" }} />\r\n          </td>\r\n          <td className=\"align-middle\">\r\n            {!this.state.editQtyChecked ? (\r\n              <input\r\n                className=\"align-middle\"\r\n                name=\"cart_qty\"\r\n                min=\"1\"\r\n                disabled=\"true\"\r\n                defaultValue={item.cart_qty}\r\n                type=\"number\"\r\n                style={{ width: \"50px\" }}\r\n                max={item.bottle_stock}\r\n              />\r\n            ) : (\r\n              <input\r\n                className=\"align-middle\"\r\n                onChange={(e) => this.inputHandler(e)}\r\n                min=\"1\"\r\n                name=\"cart_qty\"\r\n                defaultValue={item.cart_qty}\r\n                type=\"number\"\r\n                style={{ width: \"50px\" }}\r\n                max={item.bottle_stock}\r\n              />\r\n            )}\r\n            bottle\r\n          </td>\r\n          <td className=\"align-middle\">Rp.{(item.total).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">\r\n            {!this.state.editQtyChecked ? (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.setState({ editQtyChecked: true })}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => this.deleteBtnHandler(item.id_cart)}\r\n                  className=\"btn btn-danger\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => this.updateQty(item.id_cart)}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/transaction\" />\r\n    }\r\n\r\n    if (!this.state.dbcart.length) {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n          <h2>Your Cart is Empty</h2>\r\n          <h2>Please Fill your Cart to Start Shopping 😊</h2>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"p-5 text-center\">\r\n        <h1>Cart</h1>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-9 text-center\">\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>no</th>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Image</th>\r\n                  <th>Quantity</th>\r\n                  <th>Total Price</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {this.renderCart()} */}\r\n                {this.printData()}\r\n              </tbody>\r\n              <tfoot className=\"bg-light\">\r\n                <tr>\r\n                  <td colSpan=\"9\">\r\n                    <button\r\n                      onClick={this.checkoutModeToggle}\r\n                      className=\"btn btn-success\"\r\n                    >\r\n                      Checkout\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n          {this.state.isCheckoutMode ? (\r\n            <div className=\"col-3\">\r\n              {/* Form Checkout */}\r\n              <div className=\"card text-left\">\r\n                <div className=\"card-header\">\r\n                  <strong>Order Summary</strong>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex my-2 flex-row justify-content-between align-items-center\">\r\n                    <span className=\"font-weight-bold\">Subtotal Price</span>\r\n                    <span>Rp {(this.state.subtotal).toLocaleString(\"id\")} </span>\r\n                  </div>\r\n                  <div className=\"d-flex my-2 flex-row justify-content-between align-items-center\">\r\n                    <span className=\"font-weight-bold\">Tax Fee (10%)</span>\r\n                    <span>Rp {(this.state.tax).toLocaleString(\"id\")} </span>\r\n                  </div>\r\n                  <div className=\"d-flex my-2 flex-row justify-content-between align-items-center\">\r\n                    <span className=\"font-weight-bold\">Shipping Cost</span>\r\n                    <span>Rp {(this.state.dbcart.length * 10000).toLocaleString(\"id\")} </span>\r\n                  </div>\r\n                  <div className=\"d-flex my-2 flex-row justify-content-between align-items-center\">\r\n                    <span className=\"font-weight-bold\">Grand Total Price</span>\r\n                    <span>Rp {(this.state.grandTotalPrice).toLocaleString(\"id\")} </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body border-top\">\r\n                  <label htmlFor=\"paymentMethod\">Payment Method</label>\r\n                  <br />\r\n                  <select onChange={this.inputHandler} name=\"paymentMethod\" className=\"custom-select\" multiple>\r\n                    <option value=\"bank transfer\" selected>\r\n                      Bank Transfer\r\n                    </option>\r\n                    <option value=\"gopay\">Gopay</option>\r\n                    <option value=\"ovo\">Ovo</option>\r\n                    <option value=\"paypal\">Paypal</option>\r\n                  </select>\r\n                  <br />\r\n                  <br />\r\n                  {/* <input onChange={this.inputHandler} type=\"text\" className=\"form-control mb-3\" name=\"paymentMethod\" /> */}\r\n                  <label htmlFor=\"expedition\">Shipping</label>\r\n                  <br />\r\n                  <select onChange={this.inputHandler} name=\"expedition\" className=\"form-control\">\r\n                    <option value=\"jne\">JNE</option>\r\n                    <option value=\"j&t\">J&T</option>\r\n                    <option value=\"tiki\">TIKI</option>\r\n                    <option value=\"anteraja\">Anter Aja</option>\r\n                  </select>\r\n                  {/* <input onChange={this.inputHandler} type=\"text\" className=\"form-control\" name=\"expedition\" /> */}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                    <input\r\n                      className=\"form-control mx-1\"\r\n                      type=\"string\"\r\n                      name=\"payment\"\r\n                      disabled=\"true\"\r\n                      defaultValue={`Rp ${(this.state.grandTotalPrice).toLocaleString(\"id\")}`}\r\n                    />\r\n                    <button\r\n                      onClick={this.payBtnHandler}\r\n                      className=\"btn btn-success mx-1\"\r\n                    >\r\n                      Pay\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cart);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\Admin.jsx",["298","299","300"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { URL_API } from \"../../helper\";\r\nimport RevenueCard from \"../../components/admin/RevenueCard\";\r\nimport RevenueAnnual from \"../../components/admin/RevenueAnnual\";\r\nimport ExpensesCard from \"../../components/admin/ExpensesCard\";\r\nimport ExpensesAnnual from \"../../components/admin/ExpensesAnnual\";\r\nimport ProfitCard from \"../../components/admin/ProfitCard\";\r\nimport ProfitAnnual from \"../../components/admin/ProfitAnnual\";\r\nimport Chart from \"../../components/admin/Chart\";\r\nimport TopSell from \"../../components/admin/TopSell\";\r\nimport TopSellAnnual from \"../../components/admin/TopSellAnnual\";\r\nimport ChartPieMg from \"../../components/admin/ChartPieMg\";\r\nimport ChartPieMl from \"../../components/admin/ChartPieMl\";\r\nimport ChartPieBt from \"../../components/admin/ChartPieBt\";\r\nimport ChartPreStock from \"../../components/admin/ChartPreStock\";\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    revenueMonthly: 0,\r\n    revenueAnnual: 0,\r\n    totalPrice: 0,\r\n    shipping: 0,\r\n    totalPriceMonthly: 0,\r\n    shippingMonthly: 0,\r\n  };\r\n\r\n  render() {\r\n    if (this.props.userGlobal.role !== \"admin\") {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          <h1>Admin Dashboard</h1>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <RevenueCard />\r\n          <ExpensesCard />\r\n          <ProfitCard />\r\n          <TopSell />\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <RevenueAnnual />\r\n          <ExpensesAnnual />\r\n          <ProfitAnnual />\r\n          <TopSellAnnual />\r\n        </div>\r\n        <div className=\"my-4 mx-4\">\r\n          <h3 className=\"ml-5 mb-4\">Earnings Overview <em>Excludes</em> Pre-Sales Stock Expenses and Restocks</h3>\r\n          <Chart />\r\n        </div>\r\n        <br /> <br /> <br />\r\n        <div className=\"my-4 mx-4\">\r\n          <h3 className=\"ml-5 mb-4\">Earnings Overview <em>Includes</em> Pre-Sales Stock Expenses</h3>\r\n          <ChartPreStock />\r\n        </div>\r\n        <br /> <br /> <br />\r\n        <div\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"solid 1px red\",\r\n          }}\r\n        >\r\n          <h2 className=\"d-flex justify-content-center p-4 mt-4\">\r\n            Drugs Sold in Milligram Unit (User's Cart)\r\n          </h2>\r\n          <ChartPieMg />\r\n          <div className=\"d-flex flex-row justify-content-center mb-5\">\r\n            <h5 style={{ color: \"#0088FE\" }} className=\"d-inline p-2\">\r\n              Amoxicillin\r\n            </h5>\r\n            <h5 style={{ color: \"#00C49F\" }} className=\"d-inline p-2\">\r\n              Cefadroxil\r\n            </h5>\r\n            <h5 style={{ color: \"#FFBB28\" }} className=\"d-inline p-2\">\r\n              Dequalinium\r\n            </h5>\r\n            <h5 style={{ color: \"#FF8042\" }} className=\"d-inline p-2\">\r\n              Paracetamol\r\n            </h5>\r\n            <h5 style={{ color: \"#e04be3\" }} className=\"d-inline p-2\">\r\n              Valium\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <br /> <br />\r\n        <div style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <h2 className=\"d-flex justify-content-center\">\r\n            Drugs Sold in Milliliter Unit (User's Cart)\r\n          </h2>\r\n          <ChartPieMl />\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n            <h5 style={{ color: \"#0088FE\" }} className=\"d-inline p-2\">\r\n              Bromhexine\r\n            </h5>\r\n            <h5 style={{ color: \"#00C49F\" }} className=\"d-inline p-2\">\r\n              Ibuprofen\r\n            </h5>\r\n            <h5 style={{ color: \"#FFBB28\" }} className=\"d-inline p-2\">\r\n              Phenylephrine\r\n            </h5>\r\n            <h5 style={{ color: \"#FF8042\" }} className=\"d-inline p-2\">\r\n              Povidone\r\n            </h5>\r\n            <h5 style={{ color: \"#e04be3\" }} className=\"d-inline p-2\">\r\n              Simethicone\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <br /> <br />\r\n        <div\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"solid 1px red\",\r\n          }}\r\n        >\r\n          <h2 className=\"d-flex justify-content-center p-4 mt-4\">\r\n            Drugs Sold in Bottle Unit\r\n          </h2>\r\n          <ChartPieBt />\r\n          <div className=\"d-flex flex-row justify-content-center mb-5\">\r\n            <h5 style={{ color: \"#0088FE\" }} className=\"d-inline p-2\">\r\n              Amoxicillin\r\n            </h5>\r\n            <h5 style={{ color: \"#00C49F\" }} className=\"d-inline p-2\">\r\n              Bromhexine\r\n            </h5>\r\n            <h5 style={{ color: \"#FFBB28\" }} className=\"d-inline p-2\">\r\n              Cefadroxil\r\n            </h5>\r\n            <h5 style={{ color: \"#FF8042\" }} className=\"d-inline p-2\">\r\n              Dequalinium\r\n            </h5>\r\n            <h5 style={{ color: \"#e04be3\" }} className=\"d-inline p-2\">\r\n              Ibuprofen\r\n            </h5>\r\n            <h5 style={{ color: \"#003f5c\" }} className=\"d-inline p-2\">\r\n              Paracetamol\r\n            </h5>\r\n            <h5 style={{ color: \"#58508d\" }} className=\"d-inline p-2\">\r\n              Phenylephrine\r\n            </h5>\r\n            <h5 style={{ color: \"#bc5090\" }} className=\"d-inline p-2\">\r\n              Povidone\r\n            </h5>\r\n            <h5 style={{ color: \"#ff6361\" }} className=\"d-inline p-2\">\r\n              Simethicone\r\n            </h5>\r\n            <h5 style={{ color: \"#ffa600\" }} className=\"d-inline p-2\">\r\n              Valium\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Admin);\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\SalesReport.jsx",["301","302","303","304","305","306","307","308"],"import React from \"react\";\r\nimport Axios from 'axios';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Table } from 'reactstrap';\r\nimport { URL_API } from '../../helper';\r\nimport moment from \"moment\";\r\n\r\nclass SalesReport extends React.Component {\r\n  state = {\r\n    dbreport: [],\r\n    revenue: 0,\r\n    totalPrice: 0,\r\n    shipping: 0,\r\n    tax: 0\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getData()\r\n    this.countTotalPrice()\r\n    this.countShipping()\r\n  }\r\n\r\n  getData = () => {\r\n    Axios.get(`${URL_API}/admin/sales`)\r\n    .then(res => {\r\n      this.setState({ dbreport: res.data.results })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dbreport.map((item, index) => {\r\n      return (\r\n        <tr>\r\n          <td>{index+1}</td>\r\n          <td>{item.username}</td>\r\n          <td>{item.product_name}</td>\r\n          <td>{item.product_price}</td>\r\n          <td>{item.qty}</td>\r\n          <td>Rp {(item.total_price).toLocaleString(\"id\")}</td>\r\n          <td>Rp {(item.tax).toLocaleString(\"id\")}</td>\r\n          <td>Rp {(item.shipping_cost).toLocaleString(\"id\")}</td>\r\n          <td>Rp {(item.total_price + item.tax + item.shipping_cost).toLocaleString(\"id\")}</td>\r\n          <td>{moment(item.date).format(\"D / MMM / YYYY\")}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  countTotalPrice = () => {\r\n    Axios.get(`${URL_API}/admin/total-price`)\r\n    .then(res => {\r\n      this.setState({ totalPrice: res.data.results[0].total_price })\r\n      // console.log(res.data)\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Sum Total Price\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  countShipping = () => {\r\n    Axios.get(`${URL_API}/admin/shipping`)\r\n    .then(res => {\r\n      this.setState({ shipping: res.data.results[0].total_shipping })\r\n      // console.log(res.data)\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Sum Total Shipping\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userGlobal.role !== \"admin\") {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\", marginBottom: \"30px\" }}>\r\n          <h1>Sales Report</h1>\r\n        </div>\r\n        <div className=\"row m-auto\" style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n          <div className=\"col-md-18 mx-2 text-center\">\r\n            <Table className=\"table-striped table-hover\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Username</th>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Total Price</th>\r\n                  <th>Tax</th>\r\n                  <th>Shipping Cost</th>\r\n                  <th>Revenue</th>\r\n                  <th>Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.printData()}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginLeft: \"280px\", marginTop: \"40px\" }}>\r\n          <h3>Annual Revenue : Rp {(this.state.totalPrice + (this.state.totalPrice * 0.1 ) + this.state.shipping).toLocaleString(\"id\")} </h3>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SalesReport);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\Navbar.jsx",["309"],"import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../redux/actions/user\";\r\nimport { URL_API } from \"../helper\";\r\n\r\nimport iconMap from \"../img/edubin/all-icon/map.png\";\r\nimport iconEmail from \"../img/edubin/all-icon/email.png\";\r\nimport iconSupport from \"../img/edubin/all-icon/support.png\";\r\nimport logo from \"../img/edubin/logo.png\";\r\n\r\nimport \"../css/edubin/slick.css\";\r\nimport \"../css/edubin/animate.css\";\r\nimport \"../css/edubin/nice-select.css\";\r\nimport \"../css/edubin/jquery.nice-number.min.css\";\r\nimport \"../css/edubin/magnific-popup.css\";\r\nimport \"../css/edubin/bootstrap.min.css\";\r\nimport \"../css/edubin/font-awesome.min.css\";\r\nimport \"../css/edubin/default.css\";\r\nimport \"../css/edubin/style.css\";\r\nimport \"../css/edubin/responsive.css\";\r\n\r\nclass MyNavbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <header id=\"header-part\">\r\n          <div class=\"row\" style={{ backgroundColor: \"#07294D\" }}>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"header-contact text-lg-left text-center\">\r\n                <ul>\r\n                  <li>\r\n                    <img src={iconMap} alt=\"icon\" />\r\n                    <span>Cipete Raya, Jakarta Selatan</span>{\" \"}\r\n                  </li>\r\n                  <li>\r\n                    <img src={iconEmail} alt=\"icon\" />\r\n                    <span>pharma2.purwadhika@gmail.com</span>\r\n                  </li>\r\n                  <li>\r\n                    <img src={iconSupport} alt=\"icon\" style={{ height: \"21px\" }} />\r\n                    <span>021-7777777</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"header-contact text-lg-right text-center\">\r\n                <p style={{ color: \"white\" }} >Opening Hours : Monday to Sunday - 8 AM to 8 PM</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div class=\"header-logo-support pt-30 pb-30\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-4 col-md-4\">\r\n                  <div class=\"logo\">\r\n                    <a href=\"http://localhost:3000\">\r\n                      <img src={logo} alt=\"Logo\" width={130} />{\" \"}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-8 col-md-8\">\r\n                  <div class=\"support-button float-right d-none d-md-block\">\r\n                    <div class=\"support float-left\">\r\n                      <div class=\"icon\">\r\n                        <img src={iconSupport} alt=\"icon\" />\r\n                      </div>\r\n                      <div class=\"cont\">\r\n                        <p>Be Well Pharma Support</p>\r\n                        <span>021 22865968</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </header>\r\n\r\n        <div>\r\n          <Navbar color=\"light\" light>\r\n            <NavbarBrand>\r\n              {/* <Link to=\"/\">Pharma2</Link> */}\r\n              {/* Pharma2 */}\r\n              <a href=\"http://localhost:3000\">\r\n                <img src={logo} alt=\"Logo\" width={130} />{\" \"}\r\n              </a>\r\n            </NavbarBrand>\r\n            <Nav>\r\n              {\r\n                this.props.userGlobal.username && this.props.userGlobal.navbarLogin ?\r\n                <>\r\n                  <NavItem>\r\n                    <NavbarText className=\"nav\" style={{ color: \"black\" }}>\r\n                      <Link to=\"/profile\">Hello, {this.props.userGlobal.username}{\" \"}\r\n                      {\r\n                        this.props.userGlobal.profile_picture ? \r\n                        < img src={URL_API + this.props.userGlobal.profile_picture} alt=\"\" style={{ height: \"30px\", width: \"30px\", borderRadius: \"50px\" }} />\r\n                        : null\r\n                      }\r\n                      </Link>\r\n                    </NavbarText>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Pages\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      {\r\n                        this.props.userGlobal.role === \"admin\" ?\r\n                        <> \r\n                          <DropdownItem>\r\n                            <Link to=\"/admin\">Admin Dashboard</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/confirm-reject\">Confirm-Reject Transaction</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/sales\">Sales Report</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/admin-transaction\">All User Transaction</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/stock\">Product List and Stock</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/product-usage\">Info Qty Custom Order</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/custom-transaction\">Custom Order</Link>\r\n                          </DropdownItem>\r\n                        </>\r\n                        : \r\n                        <>\r\n                          <DropdownItem>\r\n                            <Link to=\"/profile\">Profile</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/cart\">Cart</Link>\r\n                          </DropdownItem>\r\n                          <DropdownItem>\r\n                            <Link to=\"/transaction\">Transaction</Link>\r\n                          </DropdownItem>\r\n                         \r\n                          <DropdownItem>\r\n                            <Link to=\"/change-pass\">Change Password</Link>\r\n                          </DropdownItem>\r\n                        </>\r\n                      }\r\n                      <DropdownItem divider />\r\n                      <DropdownItem onClick={this.props.logoutUser}>\r\n                        Logout\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </>\r\n                :\r\n                <NavItem>\r\n                  <NavbarText>\r\n                    <Link to=\"/login\">Login</Link> | <Link to=\"/register\">Register</Link>\r\n                  </NavbarText>\r\n                </NavItem>\r\n              }\r\n            </Nav>\r\n          </Navbar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logoutUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyNavbar);\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\Transaction.jsx",["310","311","312","313","314","315","316"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { URL_API } from \"../helper\";\r\nimport Axios from \"axios\";\r\nimport { NavItem, Button, Input } from \"reactstrap\";\r\nimport payment from \"../img/payment.png\"\r\nconst moment = require(\"moment\");\r\n\r\nclass Transaction extends React.Component {\r\n  state = {\r\n    id_transaction: 0,\r\n    dbTransaction: [],\r\n    dbHistoryProduct: [],\r\n    isPaidClicked: false,\r\n    isDetailClicked: false,\r\n    status: \"all\",\r\n    image: \"\",\r\n    page: 1,\r\n    maxPage: 1,\r\n    limitPage: 0,\r\n    date: \"\",\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  previewFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      this.setState({\r\n        image: e.target.files[0].name,\r\n        addFile: e.target.files[0],\r\n      });\r\n      let preview = document.getElementById(\"image\");\r\n      preview.src = URL.createObjectURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  getDataProduct = () => {\r\n    Axios.get(`${URL_API}/transaction/getProductTransaction/${this.state.date}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          dbHistoryProduct: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getData = () => {\r\n    if (this.state.status == \"all\") {\r\n      Axios.get(\r\n        `${URL_API}/transaction/getTransaction/${this.props.userGlobal.id_user}/${this.state.limitPage}`\r\n      )\r\n        .then((res) => {\r\n          this.setState({\r\n            dbTransaction: res.data,\r\n            maxPage: Math.ceil(this.state.dbTransaction.length / 5),\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"cannot get data\");\r\n          console.log(err);\r\n        });\r\n    } else if (\r\n      this.state.status == \"unpaid\" ||\r\n      \"process\" ||\r\n      \"shipping\" ||\r\n      \"done\"\r\n    ) {\r\n      Axios.get(\r\n        `${URL_API}/transaction/getTransactionFilter/${this.props.userGlobal.id_user}/${this.state.status}`\r\n      )\r\n\r\n        .then((res) => {\r\n          this.setState({\r\n            dbTransaction: res.data,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"cannot get data\");\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  nextPageHandler = () => {\r\n    this.setState({\r\n      page: this.state.page + 1,\r\n      limitPage: this.state.limitPage + 5,\r\n    });\r\n  };\r\n\r\n  prevPageHandler = () => {\r\n    this.setState({\r\n      page: this.state.page - 1,\r\n      limitPage: this.state.limitPage - 5,\r\n    });\r\n  };\r\n\r\n  onBtnUploadPayment = () => {\r\n    if (this.state.addFile) {\r\n      let formData = new FormData();\r\n\r\n      formData.append(\"file\", this.state.addFile);\r\n      Axios.patch(\r\n        `${URL_API}/upload/uploadPayment/${this.state.date}`,\r\n        formData\r\n      )\r\n        .then((res) => {\r\n          alert(res.data.message);\r\n          this.setState({ isPaidClicked: false });\r\n          this.getData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  onBtnDone = (date1)=>{\r\n    Axios.patch(`${URL_API}/transaction/transactionDone/${date1}`)\r\n      .then((res) => {\r\n        alert(res.data.message);\r\n        this.getData();\r\n        console.log(date1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.getData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.getDataProduct();\r\n  }\r\n\r\n  onBtnPay = (idTr, date1) => {\r\n    this.setState({\r\n      id_transaction: idTr,\r\n      isPaidClicked: true,\r\n      isDetailClicked: false,\r\n      date : date1\r\n    });\r\n    this.getData();\r\n  };\r\n\r\n  onBtnCancel = () => {\r\n    this.setState({\r\n      isPaidClicked: false,\r\n    });\r\n  };\r\n\r\n  dataProduct = () => {\r\n    return this.state.dbHistoryProduct.map((item) => {\r\n      return (\r\n        <tr>\r\n          <td>{item.product_name}</td>\r\n          <td>({item.qty})</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  cardDetail = () => {\r\n    return (\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex my-2 flex-row justify-content-between\">\r\n          <table className=\"table\">\r\n            <thead className=\"\">\r\n              <tr>\r\n                <th>Drugs Name</th>\r\n                <th>Qty</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.dataProduct()}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  onBtnDetail = (date1) => {\r\n    this.setState({ isDetailClicked: true, isPaidClicked: false, date: date1 });\r\n    console.log(this.state.date);\r\n    this.getDataProduct();\r\n  };\r\n  onBtnBackDetail = () => {\r\n    this.setState({ isDetailClicked: false });\r\n  };\r\n\r\n  printData = () => {\r\n    return this.state.dbTransaction.map((item, index) => {\r\n      return (\r\n        <tr>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">\r\n            {moment(item.date).format(\"D / MMM / YYYY HH:mm\")}\r\n          </td>\r\n          <td className=\"align-middle\">{item.total_qty}</td>\r\n          <td className=\"align-middle\">Rp.{item.tax}</td>\r\n          <td className=\"align-middle\">Rp.{item.total_tp}</td>\r\n          <td className=\"align-middle\">{item.expedition_name}</td>\r\n          <td className=\"align-middle\">Rp.{item.shipping_cost}</td>\r\n          <td className=\"align-middle\">Rp.{item.final_price}</td>\r\n          <td className=\"align-middle\">{item.status}</td>\r\n          <td className=\"align-middle\">\r\n            {item.status == \"unpaid\" ? (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.onBtnPay(item.id_transaction, moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\") )}\r\n              >\r\n                pay\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success\"\r\n                onClick={() =>\r\n                  this.onBtnDetail(\r\n                    moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")\r\n                  )\r\n                }\r\n              >\r\n                Detail Product\r\n              </button>\r\n            )}\r\n            {item.status == \"shipping\" ? (\r\n              <button\r\n                className=\"btn btn-primary mx-3\"\r\n                onClick={() => this.onBtnDone( moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\") )}\r\n              >\r\n                done Transaction\r\n              </button>\r\n            ) : (\r\n              null\r\n            )}\r\n\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    \r\n    if (!this.props.userGlobal.username) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"p-5 text-center\">\r\n        <h1>Transaction</h1>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-9 text-center\">\r\n            {\"Status : \"}\r\n            <Input\r\n              className={\" btn btn-primary my-3\"}\r\n              name=\"status\"\r\n              onChange={this.inputHandler}\r\n              style={{ width: \"100px\" }}\r\n              type=\"select\"\r\n              id=\"exampleSelect\"\r\n            >\r\n              <option value={\"all\"}>All</option>\r\n              <option value={\"unpaid\"}>Unpaid</option>\r\n              <option value={\"process\"}>Process</option>\r\n              <option value={\"shipping\"}>Shipping</option>\r\n              <option value={\"done\"}>Done</option>\r\n            </Input>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>no</th>\r\n                  <th>Date</th>\r\n                  <th>Quantity</th>\r\n                  <th>Tax</th>\r\n                  <th>Price</th>\r\n                  <th>Expedition</th>\r\n                  <th>Shipping Cost</th>\r\n                  <th>Total Price</th>\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {this.renderCart()} */}\r\n                {this.printData()}\r\n              </tbody>\r\n              <tfoot className=\"bg-light\">\r\n                <tr>\r\n                  <td colSpan=\"10\">\r\n                    <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                      <button\r\n                        disabled={this.state.page === 1}\r\n                        className=\"btn btn-dark\"\r\n                        onClick={this.prevPageHandler}\r\n                      >\r\n                        {\"<\"}\r\n                      </button>\r\n                      <div className=\"text-center\">page {this.state.page}</div>\r\n                      <button\r\n                        disabled={this.state.dbTransaction.length < 5}\r\n                        className=\"btn btn-dark\"\r\n                        onClick={this.nextPageHandler}\r\n                      >\r\n                        {\">\"}\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n          {this.state.isDetailClicked ? (\r\n            <div className=\"card\" style={{ width: \"300px\" }}>\r\n              <div className=\"card-header\">\r\n                <strong>transaction detail</strong>\r\n              </div>\r\n              <div className=\"card-body\">{this.cardDetail()}</div>\r\n              <button\r\n                onClick={this.onBtnBackDetail}\r\n                className=\"btn btn-primary mx-5 my-3\"\r\n              >\r\n                back\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n\r\n          {/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n          {this.state.isPaidClicked ? (\r\n            <div\r\n              className=\"col-md-3 p-4 text-white text-left\"\r\n              style={{ backgroundColor: \"#00008B\", borderRadius: \"30px\" }}\r\n            >\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <div>\r\n                    <img\r\n                      src= {payment}\r\n                      id=\"image\"\r\n                      alt=\"\"\r\n                      className=\"img-thumbnail d-grid gap-2 col-9 mx-auto\"\r\n                      style={{\r\n                        width: \"700px\",\r\n                        height: \"500px\",\r\n                        backgroundColor: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"img\">Image</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"img\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    onChange={this.previewFile}\r\n                  />\r\n                </div>\r\n              </form>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onBtnUploadPayment}\r\n                className=\"btn btn-primary float-right\"\r\n              >\r\n                Add Data\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onBtnCancel}\r\n                className=\"btn btn-warning float-right mx-3\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userGlobal: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Transaction)\r\n","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\Footer.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\ProductDetail.jsx",["317","318"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { URL_API } from \"../helper\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProductDetail extends React.Component {\r\n  state = {\r\n    dbproduct: {},\r\n    quantity: 1,\r\n    productId: 0,\r\n    dbcart: []\r\n  }\r\n\r\n  getProduct = () => {\r\n    Axios.get(`${URL_API}/product/product-detail/${this.state.productId}`)\r\n    .then(res => {\r\n      this.setState({ dbproduct: res.data.results[0] })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Product Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  getCart = () => {\r\n    Axios.get(`${URL_API}/cart/get-user-cart/${this.props.userGlobal.id_user}`)\r\n    .then(res => {\r\n      this.setState({ dbcart: res.data.results })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Cart Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  qtyBtnHandler = (action) => {\r\n    if (action === \"increment\") {\r\n      this.setState({ quantity: this.state.quantity + 1 })\r\n    } else if (action === \"decrement\" && this.state.quantity > 1) {\r\n      this.setState({ quantity: this.state.quantity - 1 })\r\n    }\r\n  }\r\n\r\n  addToCartHandler = () => {\r\n    const findProduct = this.state.dbcart.find(val => val.id_product == this.state.productId)\r\n\r\n    if (findProduct) {\r\n      Axios.patch(`${URL_API}/cart/patch-cart`, {\r\n        cart_qty: this.state.quantity + findProduct.cart_qty,\r\n        id_cart: findProduct.id_cart\r\n      })\r\n      .then(res => {\r\n        alert(\"Add Item's Quantity to Cart Succeed\")\r\n        this.getCart()\r\n      })\r\n      .catch(err => {\r\n        alert(\"Add Item's Quantity to Cart Failed\")\r\n        console.log(err)\r\n      })\r\n    } else {\r\n      Axios.post(`${URL_API}/cart/add-cart/${this.props.userGlobal.id_user}`, {\r\n        id_product: this.state.productId,\r\n        cart_qty: this.state.quantity\r\n      })\r\n      .then(res => {\r\n        alert(\"Add New Item to Cart Succeed\")\r\n        this.getCart()\r\n      })\r\n      .catch(err => {\r\n        alert(\"Add New Item to Cart Failed\")\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.location.pathname.length == 16) {\r\n      this.setState({ productId: parseInt(window.location.pathname.slice(16, 17)) })\r\n    } else {\r\n      this.setState({ productId: parseInt(window.location.pathname.slice(16, 18)) })\r\n    }\r\n    \r\n    this.getCart()\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.getProduct()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-6\">\r\n            <img \r\n              style={{ width: \"100%\" }} \r\n              src={URL_API + this.state.dbproduct.product_image} \r\n              alt=\"\" \r\n            />\r\n          </div>\r\n          <div className=\"col-6 d-flex flex-column justify-content-center\">\r\n            <h4>{this.state.dbproduct.product_name}</h4>\r\n            <h5>Rp {this.state.dbproduct.product_price}</h5>\r\n            <p>\r\n              {this.state.dbproduct.description}\r\n            </p>\r\n            <div className=\"d-flex flex-row align-items-center\">\r\n              <button onClick={() => this.qtyBtnHandler(\"decrement\")} className=\"btn btn-primary mr-4\">\r\n                -\r\n              </button>\r\n              {this.state.quantity}\r\n              <button onClick={() => this.qtyBtnHandler(\"increment\")} className=\"btn btn-primary mx-4\">\r\n                +\r\n              </button>\r\n            </div>\r\n            <button onClick={this.addToCartHandler} disabled={this.props.userGlobal.role !== \"user\"} className=\"btn btn-success mt-3\">\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductDetail);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\ProductUsage.jsx",["319"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { URL_API } from \"../../helper\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProductUsage extends React.Component {\r\n    state ={\r\n        dbProductUsage : [],\r\n        page : 1,\r\n        limitPage : 0\r\n\r\n    }\r\n\r\n    getData = () => {\r\n        Axios.get(`${URL_API}/admin/get-product-usage/${this.state.limitPage}`)\r\n          .then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n              dbProductUsage: res.data.results\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            alert(\"Cannot Get Data\");\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n      componentDidMount(){\r\n          this.getData()\r\n      }\r\n      componentDidUpdate (){\r\n          this.getData()\r\n      }\r\n      nextPageHandler = () => {\r\n        this.setState({\r\n          page: this.state.page + 1,\r\n          limitPage: this.state.limitPage + 3,\r\n        });\r\n      };\r\n    \r\n      prevPageHandler = () => {\r\n        this.setState({\r\n          page: this.state.page - 1,\r\n          limitPage: this.state.limitPage - 3,\r\n        });\r\n      };\r\n\r\n      cardProduct =()=>{\r\n          return this.state.dbProductUsage.map((item, index)=>{\r\n\r\n              return(\r\n                <div className=\"col-md-4 ftco-animate fadeInUp ftco-animated justify-content-center align-items-center\">\r\n                            <div className=\"block-7\">\r\n                                <div className=\"img\">\r\n                                    <img style={{height:\"350px\", width: \"350px\", borderTopLeftRadius:\"20px\", borderTopRightRadius : \"20px\"}}  src={URL_API + item.product_image} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"text-center p-4\" style={{ backgroundColor:\"#FFB6C1\", borderBottomLeftRadius : \"20px\", borderBottomRightRadius : \"20px\"}}>\r\n                                    <span className=\"excerpt d-block\" style={{fontWeight :\"bold\"}}>{item.product_name}</span>\r\n                                    <span className=\"price\"><sup>Rp.</sup> <span class=\"number\">{item.product_price / item.bottle_volume}</span> <sub>/{item.unit}</sub></span>\r\n                                    \r\n                                        <li><span className=\"\">QTY Usage = {item.total_qty} {item.unit}</span></li>\r\n                                        <li><span className=\"\">QTY Now = {item.stock} {item.unit}</span></li>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n              )\r\n          })\r\n      }\r\n    render (){\r\n      if (!this.props.userGlobal.username) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n        console.log(this.state.dbProductUsage);\r\n\r\n\r\n        return (\r\n            <section class=\"ftco-section bg-light\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center pb-5 mb-3\">\r\n                    <div className=\"col-md-7 heading-section text-center ftco-animate fadeInUp ftco-animated\">\r\n                        <h2>Product Usage In Custom Order</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    {this.cardProduct()}\r\n                    \r\n                </div>\r\n               \r\n                    \r\n                      <div className=\"d-flex flex-row justify-content-center align-items-center my-4\">\r\n                        <button\r\n                          disabled={this.state.page === 1}\r\n                        className=\"btn btn-dark\"\r\n                        onClick={this.prevPageHandler}\r\n                        >\r\n                          {\"<\"}\r\n                        </button>\r\n                        <div className=\"text-center\"> {\" page \"} {this.state.page} </div>\r\n                        <button\r\n                          disabled={this.state.dbProductUsage.length < 3}\r\n                          className=\"btn btn-dark\"\r\n                          onClick={this.nextPageHandler}\r\n                        >\r\n                          {\">\"}\r\n                        </button>\r\n                      </div>\r\n                    \r\n                  \r\n            </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps) (ProductUsage);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\adminTransaction.jsx",["320","321","322","323","324","325","326"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { URL_API } from \"../../helper\";\r\nimport Axios from 'axios'\r\nimport { NavItem, Button, Input } from \"reactstrap\";\r\nconst moment = require('moment')\r\n\r\n\r\nclass Transaction extends React.Component{\r\n\r\n    state = {\r\n        id_transaction : 0,\r\n        dbTransaction : [],\r\n        dbHistoryProduct : [],\r\n        isDetailClicked : false,\r\n        status : \"all\",\r\n        page : 1,\r\n        maxPage : 1,\r\n        limitPage : 0,\r\n        date : \"\",\r\n        field : \"date\",\r\n        ordered : \"desc\"\r\n    }\r\n\r\n    inputHandler = (e) =>{\r\n        const value = e.target.value \r\n        const name = e.target.name \r\n        this.setState({[name] : value})\r\n\r\n    }\r\n\r\n\r\n    getDataProduct = ()=>{\r\n        Axios.get(`${URL_API}/transaction/getProductTransaction/${this.state.date}`)\r\n        .then(res =>{\r\n            this.setState({\r\n                dbHistoryProduct : res.data,\r\n            })\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getData = () =>{\r\n        if(this.state.status == \"all\"){\r\n\r\n            Axios.get(`${URL_API}/admin/getAdminTransaction/${this.state.limitPage}/${this.state.field}/${this.state.ordered}`)\r\n            .then(res =>{\r\n                this.setState({\r\n                    dbTransaction : res.data,\r\n                    maxPage : Math.ceil(this.state.dbTransaction.length / 5)\r\n                \r\n                })\r\n        \r\n            })\r\n            .catch(err =>{\r\n                alert(\"cannot get data\")\r\n                console.log(err);\r\n            })\r\n        }else if(this.state.status == \"unpaid\" || \"process\" || \"shipping\" || \"done\"){\r\n            Axios.get(`${URL_API}/admin/getAdminTransactionFilter/${this.state.limitPage}/${this.state.field}/${this.state.ordered}/${this.state.status}`)\r\n            \r\n            .then(res =>{\r\n            \r\n                this.setState({\r\n                    dbTransaction : res.data,\r\n                \r\n                })\r\n        \r\n            })\r\n            .catch(err =>{\r\n                alert(\"cannot get data\")\r\n                console.log(err);\r\n            })\r\n        }\r\n            \r\n       \r\n    }\r\n    nextPageHandler = () =>{\r\n        this.setState({page : this.state.page + 1 , limitPage : this.state.limitPage + 5})\r\n    }\r\n    \r\n    prevPageHandler = () =>{\r\n        this.setState({page : this.state.page - 1 , limitPage : this.state.limitPage - 5})\r\n\r\n    }\r\n\r\n    onBtnUploadPayment = () =>{\r\n        if(this.state.addFile){\r\n            let formData = new FormData()\r\n\r\n            formData.append('file', this.state.addFile)\r\n            Axios.patch(`${URL_API}/upload/uploadPayment/${this.state.id_transaction}`, formData)\r\n            .then((res)=>{\r\n                alert(res.data.message)\r\n                this.setState({isPaidClicked : false})\r\n                this.getData()\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n    }\r\n   \r\n   \r\n\r\n\r\n \r\n\r\n    componentDidUpdate(){\r\n        this.getData()\r\n    }\r\n  \r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    onBtnPay = (idTr)=>{\r\n        this.setState({id_transaction : idTr,\r\n                    isPaidClicked : true,\r\n                isDetailClicked : false})\r\n        this.getData()\r\n    }\r\n\r\n    \r\n    onBtnCancel = () =>{\r\n        this.setState({\r\n            isPaidClicked : false\r\n        })\r\n    }\r\n    onBtnLatest = () =>{\r\n      this.setState({field : \"date\",\r\n                  ordered : \"desc\"})\r\n    }\r\n    onBtnFinalPrice = () =>{\r\n      this.setState({field : \"final_price\",\r\n                  ordered : \"desc\"})\r\n    }\r\n    onBtnHightQty = () =>{\r\n      this.setState({field : \"total_qty\",\r\n                  ordered : \"desc\"})\r\n\r\n    }\r\n\r\n    dataProduct =()=>{\r\n      return this.state.dbHistoryProduct.map((item)=>{\r\n        return(\r\n\r\n        <tr>\r\n              <td>\r\n              {item.product_name}\r\n              </td>\r\n              <td>\r\n              ({item.qty})\r\n              </td>\r\n        </tr>\r\n        )\r\n      })\r\n    }\r\n\r\n    cardDetail =()=>{\r\n        \r\n            return(\r\n                <div className=\"card-body\">\r\n          <div className=\"d-flex my-2 flex-row justify-content-between\">\r\n          <table className=\"table\">\r\n              <thead className=\"\">\r\n                <tr>\r\n                  <th>Drugs Name</th>\r\n                  <th>Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.dataProduct()}\r\n              </tbody>\r\n              </table>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n            )\r\n        \r\n        \r\n    }\r\n    onBtnDetail =(date1) =>{\r\n        this.setState({isDetailClicked : true,\r\n        date : date1})\r\n        console.log(this.state.date);\r\n        this.getDataProduct()\r\n    }\r\n    onBtnBackDetail = () =>{\r\n        this.setState({isDetailClicked :false})\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    printData = () =>{\r\n        return this.state.dbTransaction.map((item, index) =>{\r\n          return(\r\n            <tr>\r\n              <td className=\"align-middle\">\r\n                  {index+1}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                    {moment(item.date).format(\"MMM / D / YYYY\")}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                {item.username}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                {item.total_qty}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                Rp.{item.tax}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                Rp.{item.total_tp}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                {item.expedition_name}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                Rp.{item.shipping_cost}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                Rp.{item.final_price}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                {item.status}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                    {\r\n                    <button className=\"btn btn-success\"  onClick={() =>this.onBtnDetail(moment(item.date).format(\"YYYY-MM-DD hh-mm-ss\"))}>Detail Product</button>\r\n                    }\r\n                </td>\r\n              </tr>\r\n          )\r\n        })\r\n      \r\n      }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"p-5 text-center\">\r\n        <h1>Admin All Transaction</h1>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-9 text-center\">\r\n              {\"Status : \"}  \r\n          <Input\r\n                className={\" btn btn-outline-primary my-3 mx-1\"}\r\n                name = \"status\"\r\n                onChange ={ this.inputHandler}\r\n                style={{ width: \"100px\", borderRadius: \"20px\" }}\r\n                type=\"select\"\r\n                id=\"exampleSelect\"\r\n                >\r\n                <option value={\"all\"}>All</option>\r\n                <option value={\"unpaid\"}>Unpaid</option>\r\n                <option value={\"process\"}>Process</option>\r\n                <option value={\"shipping\"}>Shipping</option>\r\n                <option value={\"done\"}>Done</option>\r\n                </Input>\r\n                {\"Ordered By : \"} \r\n                <button type=\"button\" onClick={this.onBtnLatest} class=\"btn btn-outline-primary mx-1\" style={{borderRadius: \"20px\"}}>Latest</button>\r\n                <button type=\"button\" onClick={this.onBtnHightQty} class=\"btn btn-outline-primary mx-1\" style={{borderRadius: \"20px\"}}>Highest Qty</button>\r\n                <button type=\"button\" onClick={this.onBtnFinalPrice}  class=\"btn btn-outline-primary mx-1\" style={{borderRadius: \"20px\"}}>Highest Total Price</button>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>no</th>\r\n                  <th>Date</th>\r\n                  <th>Username</th>\r\n                  <th>Quantity</th>\r\n                  <th>Tax</th>\r\n                  <th>Price</th>\r\n                  <th>Expedition</th>\r\n                  <th>Shipping Cost</th>\r\n                  <th>Total Price</th>\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {this.renderCart()} */}\r\n                {this.printData()}\r\n              </tbody>\r\n              <tfoot className=\"bg-light\">\r\n                <tr>\r\n                  <td colSpan=\"11\">\r\n                    \r\n              <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                <button\r\n                  disabled={this.state.page === 1}\r\n                  className=\"btn btn-dark\"\r\n                  onClick={this.prevPageHandler}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <div className=\"text-center\">\r\n                  page {this.state.page}\r\n                </div>\r\n                <button\r\n                  disabled={this.state.dbTransaction.length < 5}\r\n                  className=\"btn btn-dark\"\r\n                  onClick={this.nextPageHandler}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n          {this.state.isDetailClicked ?\r\n          <div className=\"card\" style={{width : \"300px\"}}>\r\n                <div className=\"card-header\">\r\n                  <strong>transaction detail</strong>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {this.cardDetail()}\r\n                </div>\r\n                <button onClick={this.onBtnBackDetail} className=\"btn btn-primary mx-5 my-3\">back</button>\r\n              </div>\r\n              :\r\n              null\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default Transaction","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\Stock.jsx",["327","328","329","330","331","332","333","334","335"],"import React from \"react\";\r\nimport Axios from 'axios';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Table } from 'reactstrap';\r\nimport { URL_API } from '../../helper';\r\nimport moment from \"moment\";\r\n\r\nclass Stock extends React.Component {\r\n  state = {\r\n    dbproduct: [],\r\n    page: 1,\r\n    maxPage: 1,\r\n    limitPage: 0\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.getData()\r\n  }\r\n\r\n  getData = () => {\r\n    Axios.get(`${URL_API}/admin/admin-stock/${this.state.limitPage}`)\r\n    .then(res => {\r\n      this.setState({ dbproduct: res.data.results, maxPage: Math.ceil(this.state.dbproduct.length / 4) })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dbproduct.map((item, index) => {\r\n      return (\r\n        <tr>\r\n          <td className=\"align-middle\">{item.id_product}</td>\r\n          <td className=\"align-middle\">{item.product_name}</td>\r\n          <td className=\"align-middle\">\r\n            <img src={URL_API + item.product_image} alt=\"\" style={{ height: \"125px\" }} />\r\n          </td>\r\n          <td className=\"align-middle\">Rp {(item.admin_price).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">Rp {(item.product_price).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">{item.unit == \"mg\" ? \"solid\": \"liquid\"}</td>\r\n          <td className=\"align-middle\">{(item.stock).toLocaleString(\"id\")} {item.unit}</td>\r\n          <td className=\"align-middle\">\r\n            <strong> {(Math.ceil(item.stock / item.bottle_volume)).toLocaleString(\"id\")} bottle(s) </strong>\r\n          </td>\r\n          <td className=\"align-middle\">{item.bottle_volume}</td>\r\n          <td className=\"align-middle\">{moment(item.expired_date).format(\"D MMM YYYY\")}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  nextPageHandler = () =>{\r\n    this.setState({ page : this.state.page + 1, limitPage : this.state.limitPage + 4 })\r\n  }\r\n\r\n  prevPageHandler = () =>{\r\n    this.setState({ page : this.state.page - 1, limitPage : this.state.limitPage - 4 })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userGlobal.role !== \"admin\") {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"30px\", marginBottom: \"30px\" }}>\r\n          <h1>Product List and Stock</h1>\r\n        </div>\r\n        <div className=\"row m-auto\" style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n          <div className=\"col-md-18 mx-2 text-center\">\r\n            <Table className=\"table-striped table-hover\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Product</th>\r\n                  <th>Image</th>\r\n                  <th>Admin Price</th>\r\n                  <th>Price</th>\r\n                  <th>Category</th>\r\n                  <th>Raw Material Stock</th>\r\n                  <th>Bottle Stock</th>\r\n                  <th>Bottle Volume</th>\r\n                  <th>Expired Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.printData()}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-row justify-content-center align-items-center my-2\">\r\n          <button\r\n            disabled={this.state.page === 1}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.prevPageHandler}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <div className=\"text-center mx-3 my-3\">\r\n            Page {this.state.page}\r\n          </div>\r\n          <button\r\n            disabled={this.state.dbproduct.length < 4}\r\n            className=\"btn btn-dark\"\r\n            onClick={this.nextPageHandler}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Stock);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\CustomTransaction.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\pages\\admin\\ConfirmReject.jsx",["336","337","338","339","340","341","342","343"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Table } from 'reactstrap';\r\nimport Axios from \"axios\";\r\nimport { URL_API } from '../../helper';\r\nimport moment from \"moment\";\r\n\r\nclass ConfirmReject extends React.Component {\r\n  state = {\r\n    dbtransaction: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  getData = () => {\r\n    Axios.get(`${URL_API}/admin/confirm-reject`)\r\n    .then(res => {\r\n      this.setState({ dbtransaction: res.data.results })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Get Transaction Data\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  confirmBtnHandler = (transactionId, productId, qty, stock, bottle_volume) => {\r\n    const confirmation = window.confirm(\"Are you sure want to confirm transaction?\")\r\n    if (confirmation) {\r\n      this.transactionStatus(transactionId)\r\n      this.stockDecrease(productId, qty, stock, bottle_volume)\r\n    } else {\r\n      alert(\"Confirm Transaction Canceled\")\r\n    }\r\n  }\r\n\r\n  transactionStatus = (transactionId) => {\r\n    Axios.patch(`${URL_API}/admin/confirm/${transactionId}`, {\r\n      updateStatus: \"shipping\"\r\n    })\r\n    .then(() => {\r\n      alert(\"Transaction Confirmed\")\r\n      this.getData()\r\n    })\r\n    .catch(() => {\r\n      alert(\"Failed to Confirm Transaction\")\r\n    })\r\n  }\r\n\r\n  stockDecrease = (productId, qty, stock, bottle_volume) => {\r\n    Axios.patch(`${URL_API}/admin/stock-decrease/${productId}`, {\r\n      newStockQty: parseInt(((stock / bottle_volume) - qty) * bottle_volume)\r\n    })\r\n    .then(() => {\r\n      alert(\"Product Stock Decreased\")\r\n      // this.getData()\r\n    })\r\n    .catch(() => {\r\n      alert(\"Failed to Decrease Stock\")\r\n    })\r\n  }\r\n\r\n  rejectBtnHandler = (transactionId) => {\r\n    const confirm = window.confirm(\"Are you sure want to reject transaction?\")\r\n    if (confirm) {\r\n      Axios.patch(`${URL_API}/admin/reject/${transactionId}`, {\r\n        updateStatus: \"reject\"\r\n      })\r\n      .then(() => {\r\n        alert(\"Transaction Rejected\")\r\n        this.getData()\r\n      })\r\n      .catch(() => {\r\n        alert(\"Failed to Reject Transaction\")\r\n      })\r\n    } else {\r\n      alert(\"Reject Transaction Canceled\")\r\n    }\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dbtransaction.map((item, index) => {\r\n      return (\r\n        <tr>\r\n          <td className=\"align-middle\">{index+1}</td>\r\n          <td className=\"align-middle\">{item.username}</td>\r\n          <td className=\"align-middle\">{item.product_name}</td>\r\n          <td className=\"align-middle\">{item.product_price}</td>\r\n          <td className=\"align-middle\">{item.qty}</td>\r\n          <td className=\"align-middle\">Rp {(item.total_price).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">Rp {(item.tax).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">Rp {(item.shipping_cost).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">Rp {(item.total_price + item.tax + item.shipping_cost).toLocaleString(\"id\")}</td>\r\n          <td className=\"align-middle\">{moment(item.date).format(\"D MMM YYYY, HH:mm:ss\")}</td>\r\n          <td className=\"align-middle\">\r\n            <img src={URL_API + item.image} alt=\"\" style={{ height: \"125px\" }} />\r\n          </td>\r\n          <td className=\"align-middle\">\r\n            <button className=\"btn btn-success mx-1\" onClick={() => this.confirmBtnHandler(item.id_transaction, item.id_product, item.qty, item.stock, item.bottle_volume)}>\r\n              Confirm\r\n            </button>\r\n            <button className=\"btn btn-danger mx-1\" onClick={() => this.rejectBtnHandler(item.id_transaction)}>\r\n              Reject\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userGlobal.role !== \"admin\") {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"50px\", marginBottom: \"20px\" }}>\r\n          <h2>Confirm or Reject User's Transaction</h2>\r\n        </div>\r\n        <div className=\"row m-auto\" style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <div className=\"col-md-18 mx-2 text-center\">\r\n          <Table className=\"table-striped table-hover\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>No.</th>\r\n                <th>Username</th>\r\n                <th>Product</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>Total Price</th>\r\n                <th>Tax</th>\r\n                <th>Shipping Cost</th>\r\n                <th>Grand Total</th>\r\n                <th>Date</th>\r\n                <th>Image</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.printData()}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGlobal: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ConfirmReject);","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\ProductCard.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPreStock.jsx",["344"],"import React, { PureComponent } from 'react';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// static demoUrl = 'https://codesandbox.io/s/bar-chart-with-positive-negative-i3b8b';\r\n\r\nclass ChartPreStock extends PureComponent {\r\n  state = {\r\n    dataChart: [],\r\n    stockPrice: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n    this.countStockPrice()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/chart-stats`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Monthly Sales Statistic\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      if (item.month === \"January\") {\r\n        return (\r\n          {\r\n            name : \"January\",\r\n            ProfitOrLoss: item.profit_or_loss - this.state.stockPrice,\r\n            Revenue: item.total_revenue,\r\n            Expenses: - (item.total_expenses + this.state.stockPrice),\r\n          }\r\n        )\r\n      }\r\n\r\n      return (\r\n        {\r\n          name : item.month,\r\n          ProfitOrLoss: item.profit_or_loss,\r\n          Revenue: item.total_revenue,\r\n          Expenses: - item.total_expenses,\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  countStockPrice = () => {\r\n    Axios.get(`${URL_API}/admin/stock-price`)\r\n    .then(res => {\r\n      this.setState({ stockPrice: parseInt(res.data.results[0].stock_price) })\r\n      console.log(res.data)\r\n    })\r\n    .catch(err => {\r\n      alert(\"Cannot Sum Stock Price\")\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={3}>\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={this.printData()}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"Revenue\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"Expenses\" fill=\"#d96c5f\" />\r\n          <Bar dataKey=\"ProfitOrLoss\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartPreStock;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieMg.jsx",["345"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#e04be3'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\r\n\r\nclass ChartPieMg extends PureComponent {\r\n  state = {\r\n    dataChart: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/piechart-mg`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Pie Chart mg Unit\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      return (\r\n        {\r\n          name : item.product_name,\r\n          value: item.qty\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={5}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={this.printData()}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {this.state.dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartPieMg;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieBt.jsx",["346"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#e04be3', '#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\n// static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\r\n\r\nclass ChartPieBt extends PureComponent {\r\n  state = {\r\n    dataChart: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/piechart-bt`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Pie Chart bottle Unit\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      return (\r\n        {\r\n          name : item.product_name,\r\n          value: item.qty\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={5}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={this.printData()}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {this.state.dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartPieBt;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ChartPieMl.jsx",["347"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#e04be3'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\r\n\r\nclass ChartPieMl extends PureComponent {\r\n  state = {\r\n    dataChart: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/piechart-ml`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Pie Chart ml Unit\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      return (\r\n        {\r\n          name : item.product_name,\r\n          value: item.qty\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={5}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={this.printData()}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {this.state.dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartPieMl;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\TopSellAnnual.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\TopSell.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ProfitAnnual.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\Chart.jsx",["348"],"import React, { PureComponent } from 'react';\r\nimport Axios from 'axios';\r\nimport { URL_API } from '../../helper';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// static demoUrl = 'https://codesandbox.io/s/bar-chart-with-positive-negative-i3b8b';\r\n\r\nclass Chart extends PureComponent {\r\n  state = {\r\n    dataChart: [],\r\n    restockPriceMonthly: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartStats()\r\n    this.countRestockPriceMonthly()\r\n  }\r\n\r\n  getChartStats = () => {\r\n    Axios.get(`${URL_API}/admin/chart-stats`)\r\n      .then((res) => {\r\n        this.setState({ dataChart: res.data.results })\r\n        console.log(res.data.results)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Get Monthly Sales Statistic\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  countRestockPriceMonthly = () => {\r\n    Axios.get(`${URL_API}/admin/restock-price-monthly`)\r\n      .then((res) => {\r\n        this.setState({\r\n          restockPriceMonthly: parseInt(res.data.results[0].restock_price),\r\n        });\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Cannot Sum Restock Price Monthly\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  printData = () => {\r\n    return this.state.dataChart.map((item, index) => {\r\n      if (item.month === \"October\") {\r\n        return (\r\n          {\r\n            name : \"October\",\r\n            ProfitOrLoss: item.total_price - this.state.restockPriceMonthly,\r\n            Revenue: item.tax + item.shipping_cost + item.total_price,\r\n            Expenses: - (item.tax + item.shipping_cost + this.state.restockPriceMonthly),\r\n          }\r\n        )\r\n      }\r\n\r\n      return (\r\n        {\r\n          name : item.month,\r\n          ProfitOrLoss: item.profit_or_loss,\r\n          Revenue: item.total_revenue,\r\n          Expenses: - item.total_expenses,\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={3}>\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={this.printData()}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"Revenue\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"Expenses\" fill=\"#d96c5f\" />\r\n          <Bar dataKey=\"ProfitOrLoss\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;","C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ExpensesCard.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ProfitCard.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\ExpensesAnnual.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\RevenueAnnual.jsx",[],"C:\\Users\\Abdul\\Documents\\GitHub\\PWD-Pharma-2-JCWM01\\front_end\\src\\components\\admin\\RevenueCard.jsx",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":29,"column":18,"nodeType":"359","messageId":"360","endLine":29,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":29,"column":33,"nodeType":"359","messageId":"360","endLine":29,"endColumn":35},{"ruleId":"357","severity":1,"message":"358","line":29,"column":51,"nodeType":"359","messageId":"360","endLine":29,"endColumn":53},{"ruleId":"357","severity":1,"message":"358","line":29,"column":73,"nodeType":"359","messageId":"360","endLine":29,"endColumn":75},{"ruleId":"353","severity":1,"message":"361","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":17},{"ruleId":"353","severity":1,"message":"362","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":13},{"ruleId":"353","severity":1,"message":"363","line":8,"column":10,"nodeType":"355","messageId":"356","endLine":8,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":73,"column":18,"nodeType":"359","messageId":"360","endLine":73,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":73,"column":36,"nodeType":"359","messageId":"360","endLine":73,"endColumn":38},{"ruleId":"357","severity":1,"message":"358","line":117,"column":15,"nodeType":"359","messageId":"360","endLine":117,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":73,"column":18,"nodeType":"359","messageId":"360","endLine":73,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":73,"column":36,"nodeType":"359","messageId":"360","endLine":73,"endColumn":38},{"ruleId":"357","severity":1,"message":"358","line":117,"column":15,"nodeType":"359","messageId":"360","endLine":117,"endColumn":17},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"354","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":29,"column":18,"nodeType":"359","messageId":"360","endLine":29,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":29,"column":33,"nodeType":"359","messageId":"360","endLine":29,"endColumn":35},{"ruleId":"357","severity":1,"message":"358","line":29,"column":51,"nodeType":"359","messageId":"360","endLine":29,"endColumn":53},{"ruleId":"357","severity":1,"message":"358","line":29,"column":73,"nodeType":"359","messageId":"360","endLine":29,"endColumn":75},{"ruleId":"353","severity":1,"message":"362","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":13},{"ruleId":"353","severity":1,"message":"363","line":8,"column":10,"nodeType":"355","messageId":"356","endLine":8,"endColumn":17},{"ruleId":"353","severity":1,"message":"365","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":12},{"ruleId":"357","severity":1,"message":"358","line":22,"column":17,"nodeType":"359","messageId":"360","endLine":22,"endColumn":19},{"ruleId":"357","severity":1,"message":"358","line":22,"column":38,"nodeType":"359","messageId":"360","endLine":22,"endColumn":40},{"ruleId":"353","severity":1,"message":"366","line":6,"column":10,"nodeType":"355","messageId":"356","endLine":6,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":27,"column":21,"nodeType":"359","messageId":"360","endLine":27,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":27,"column":38,"nodeType":"359","messageId":"360","endLine":27,"endColumn":40},{"ruleId":"357","severity":1,"message":"358","line":27,"column":59,"nodeType":"359","messageId":"360","endLine":27,"endColumn":61},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"367","line":4,"column":3,"nodeType":"355","messageId":"356","endLine":4,"endColumn":6},{"ruleId":"353","severity":1,"message":"368","line":5,"column":3,"nodeType":"355","messageId":"356","endLine":5,"endColumn":9},{"ruleId":"353","severity":1,"message":"369","line":6,"column":3,"nodeType":"355","messageId":"356","endLine":6,"endColumn":7},{"ruleId":"353","severity":1,"message":"370","line":8,"column":3,"nodeType":"355","messageId":"356","endLine":8,"endColumn":8},{"ruleId":"353","severity":1,"message":"371","line":10,"column":3,"nodeType":"355","messageId":"356","endLine":10,"endColumn":11},{"ruleId":"353","severity":1,"message":"364","line":13,"column":10,"nodeType":"355","messageId":"356","endLine":13,"endColumn":14},{"ruleId":"353","severity":1,"message":"372","line":16,"column":8,"nodeType":"355","messageId":"356","endLine":16,"endColumn":21},{"ruleId":"373","severity":1,"message":"374","line":143,"column":17,"nodeType":"375","endLine":149,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":279,"column":19,"nodeType":"375","endLine":285,"endColumn":21},{"ruleId":"353","severity":1,"message":"367","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":13},{"ruleId":"353","severity":1,"message":"368","line":3,"column":15,"nodeType":"355","messageId":"356","endLine":3,"endColumn":21},{"ruleId":"353","severity":1,"message":"369","line":3,"column":23,"nodeType":"355","messageId":"356","endLine":3,"endColumn":27},{"ruleId":"353","severity":1,"message":"376","line":3,"column":29,"nodeType":"355","messageId":"356","endLine":3,"endColumn":38},{"ruleId":"353","severity":1,"message":"370","line":3,"column":40,"nodeType":"355","messageId":"356","endLine":3,"endColumn":45},{"ruleId":"353","severity":1,"message":"377","line":3,"column":47,"nodeType":"355","messageId":"356","endLine":3,"endColumn":52},{"ruleId":"353","severity":1,"message":"371","line":3,"column":54,"nodeType":"355","messageId":"356","endLine":3,"endColumn":62},{"ruleId":"353","severity":1,"message":"378","line":3,"column":64,"nodeType":"355","messageId":"356","endLine":3,"endColumn":69},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"379","line":6,"column":10,"nodeType":"355","messageId":"356","endLine":6,"endColumn":17},{"ruleId":"353","severity":1,"message":"368","line":6,"column":19,"nodeType":"355","messageId":"356","endLine":6,"endColumn":25},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"362","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":13},{"ruleId":"353","severity":1,"message":"363","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":17},{"ruleId":"353","severity":1,"message":"364","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"367","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":13},{"ruleId":"353","severity":1,"message":"368","line":5,"column":15,"nodeType":"355","messageId":"356","endLine":5,"endColumn":21},{"ruleId":"353","severity":1,"message":"369","line":5,"column":23,"nodeType":"355","messageId":"356","endLine":5,"endColumn":27},{"ruleId":"353","severity":1,"message":"376","line":5,"column":29,"nodeType":"355","messageId":"356","endLine":5,"endColumn":38},{"ruleId":"353","severity":1,"message":"370","line":5,"column":40,"nodeType":"355","messageId":"356","endLine":5,"endColumn":45},{"ruleId":"353","severity":1,"message":"377","line":5,"column":47,"nodeType":"355","messageId":"356","endLine":5,"endColumn":52},{"ruleId":"353","severity":1,"message":"371","line":5,"column":54,"nodeType":"355","messageId":"356","endLine":5,"endColumn":62},{"ruleId":"353","severity":1,"message":"380","line":6,"column":3,"nodeType":"355","messageId":"356","endLine":6,"endColumn":10},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"379","line":6,"column":10,"nodeType":"355","messageId":"356","endLine":6,"endColumn":17},{"ruleId":"353","severity":1,"message":"368","line":6,"column":19,"nodeType":"355","messageId":"356","endLine":6,"endColumn":25},{"ruleId":"357","severity":1,"message":"358","line":55,"column":27,"nodeType":"359","messageId":"360","endLine":55,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":70,"column":25,"nodeType":"359","messageId":"360","endLine":70,"endColumn":27},{"ruleId":"357","severity":1,"message":"358","line":215,"column":26,"nodeType":"359","messageId":"360","endLine":215,"endColumn":28},{"ruleId":"357","severity":1,"message":"358","line":234,"column":26,"nodeType":"359","messageId":"360","endLine":234,"endColumn":28},{"ruleId":"357","severity":1,"message":"358","line":45,"column":70,"nodeType":"359","messageId":"360","endLine":45,"endColumn":72},{"ruleId":"357","severity":1,"message":"358","line":77,"column":41,"nodeType":"359","messageId":"360","endLine":77,"endColumn":43},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"381","line":2,"column":16,"nodeType":"355","messageId":"356","endLine":2,"endColumn":24},{"ruleId":"353","severity":1,"message":"361","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":17},{"ruleId":"353","severity":1,"message":"379","line":6,"column":10,"nodeType":"355","messageId":"356","endLine":6,"endColumn":17},{"ruleId":"353","severity":1,"message":"368","line":6,"column":19,"nodeType":"355","messageId":"356","endLine":6,"endColumn":25},{"ruleId":"357","severity":1,"message":"358","line":47,"column":30,"nodeType":"359","messageId":"360","endLine":47,"endColumn":32},{"ruleId":"357","severity":1,"message":"358","line":62,"column":36,"nodeType":"359","messageId":"360","endLine":62,"endColumn":38},{"ruleId":"353","severity":1,"message":"364","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"367","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":13},{"ruleId":"353","severity":1,"message":"368","line":5,"column":15,"nodeType":"355","messageId":"356","endLine":5,"endColumn":21},{"ruleId":"353","severity":1,"message":"369","line":5,"column":23,"nodeType":"355","messageId":"356","endLine":5,"endColumn":27},{"ruleId":"353","severity":1,"message":"376","line":5,"column":29,"nodeType":"355","messageId":"356","endLine":5,"endColumn":38},{"ruleId":"353","severity":1,"message":"370","line":5,"column":40,"nodeType":"355","messageId":"356","endLine":5,"endColumn":45},{"ruleId":"353","severity":1,"message":"377","line":5,"column":47,"nodeType":"355","messageId":"356","endLine":5,"endColumn":52},{"ruleId":"353","severity":1,"message":"371","line":5,"column":54,"nodeType":"355","messageId":"356","endLine":5,"endColumn":62},{"ruleId":"357","severity":1,"message":"358","line":47,"column":51,"nodeType":"359","messageId":"360","endLine":47,"endColumn":53},{"ruleId":"353","severity":1,"message":"364","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"367","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":13},{"ruleId":"353","severity":1,"message":"368","line":4,"column":15,"nodeType":"355","messageId":"356","endLine":4,"endColumn":21},{"ruleId":"353","severity":1,"message":"369","line":4,"column":23,"nodeType":"355","messageId":"356","endLine":4,"endColumn":27},{"ruleId":"353","severity":1,"message":"376","line":4,"column":29,"nodeType":"355","messageId":"356","endLine":4,"endColumn":38},{"ruleId":"353","severity":1,"message":"370","line":4,"column":40,"nodeType":"355","messageId":"356","endLine":4,"endColumn":45},{"ruleId":"353","severity":1,"message":"377","line":4,"column":47,"nodeType":"355","messageId":"356","endLine":4,"endColumn":52},{"ruleId":"353","severity":1,"message":"371","line":4,"column":54,"nodeType":"355","messageId":"356","endLine":4,"endColumn":62},{"ruleId":"353","severity":1,"message":"382","line":7,"column":3,"nodeType":"355","messageId":"356","endLine":7,"endColumn":7},{"ruleId":"353","severity":1,"message":"383","line":2,"column":25,"nodeType":"355","messageId":"356","endLine":2,"endColumn":31},{"ruleId":"353","severity":1,"message":"383","line":2,"column":25,"nodeType":"355","messageId":"356","endLine":2,"endColumn":31},{"ruleId":"353","severity":1,"message":"383","line":2,"column":25,"nodeType":"355","messageId":"356","endLine":2,"endColumn":31},{"ruleId":"353","severity":1,"message":"382","line":7,"column":3,"nodeType":"355","messageId":"356","endLine":7,"endColumn":7},"no-native-reassign",["384"],"no-negated-in-lhs",["385"],"no-unused-vars","'backgroundpharma' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'connect' is defined but never used.","'Axios' is defined but never used.","'URL_API' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","'logoutUser' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'FormText' is defined but never used.","'image_preview' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Table' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Cell' is defined but never used.","'Sector' is defined but never used.","no-global-assign","no-unsafe-negation"]